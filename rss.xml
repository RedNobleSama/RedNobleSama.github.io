<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>世上无难事,只要肯放弃</title>
        <subtitle></subtitle>
        <icon>http://oreki.world/images/favicon.ico</icon>
        <link>http://oreki.world</link>
        <author>
          <name>oreki</name>
        </author>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Thu, 15 Apr 2021 23:30:38 +0800</pubDate>
        <lastBuildDate>Thu, 15 Apr 2021 23:30:38 +0800</lastBuildDate>
        <category term="关键词1" />
        <category term="关键词2" />
        <item>
            <guid isPermalink="true">http://oreki.world/kaoyan/internet/408%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</guid>
            <title>408计算机网络-数据链路层</title>
            <link>http://oreki.world/kaoyan/internet/408%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</link>
            <category term="考研" scheme="http://oreki.world/categories/kaoyan/" />
            <category term="计算机网络" scheme="http://oreki.world/categories/kaoyan/internet/" />
            <category term="计算机网络" scheme="http://oreki.world/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/" />
            <category term="考研" scheme="http://oreki.world/tags/%E8%80%83%E7%A0%94/" />
            <pubDate>Thu, 15 Apr 2021 23:30:38 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h2 id=&#34;功能&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#功能&#34;&gt;#&lt;/a&gt; 功能&lt;/h2&gt;&lt;h3 id=&#34;数据链路层基本概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据链路层基本概念&#34;&gt;#&lt;/a&gt; 数据链路层基本概念&lt;/h3&gt;&lt;p&gt;数据链路层负责通过一条链路从一个结点向另一个物理链路直接相连的相邻结点传送数据报。&lt;/p&gt;&lt;p&gt;结点：主机、路由器 &amp;lt;br&amp;gt;&lt;br&gt;链路：网络中两个结点之间的&lt;strong&gt;物理通道&lt;/strong&gt;。链路的传输介质主要有双绞线、光纤和微波。分为有限链路和无线链路。&amp;lt;br&amp;gt;&lt;br&gt;数据链路：网络中两个结点之间的&lt;strong&gt;逻辑通道&lt;/strong&gt;。把实现控制协议的硬件和软件加到链路上就构成数据链路。&amp;lt;br&amp;gt;&lt;br&gt;帧：链路层的协议数据单元。&amp;lt;br&amp;gt;&lt;/p&gt;&lt;p&gt;数据链路层在物理层提供服务的基础上&lt;span class=&#34;red&#34;&gt;向网络层提供服务&lt;/span&gt;。其最基本的服务是将源自网络层来的数据可靠的传输到相邻节点的目标机网络层。其主要作用是 &amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt;[加强物理层传输原始比特流的功能]&amp;lt;/font&amp;gt;，将物理层提供的可能出错的物理连接改造成 &amp;lt; font color=&amp;quot;red&amp;quot;&amp;gt;[逻辑上无差错的数据链路]&amp;lt;/font&amp;gt;，使之对网络层表现为一条无差错的链路。*&lt;/p&gt;&lt;p&gt;功能一：为网络层提供服务。无确认无连接服务。有确认无连接服务。有确认面向连接服务。&amp;lt;br&amp;gt;&lt;br&gt;功能二：链路管理，即连接的建立、维持、释放（用于面向连接的服务）。&amp;lt;br&amp;gt;&lt;br&gt;功能二：组帧。&amp;lt;br&amp;gt;&lt;br&gt;功能四：流量控制。&amp;lt;br&amp;gt;&lt;br&gt;功能五：差错控制。（帧错 / 位错）。&lt;/p&gt;&lt;h3 id=&#34;封装成帧透明传输&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#封装成帧透明传输&#34;&gt;#&lt;/a&gt; 封装成帧 &amp;amp; 透明传输&lt;/h3&gt;&lt;h4 id=&#34;封装成帧&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#封装成帧&#34;&gt;#&lt;/a&gt; 封装成帧&lt;/h4&gt;&lt;p&gt;封装成帧就是在一段数据的首部和尾部添加一段数据，这段数据被称为帧定界符。接收端在收到物理层上交的比特流后，就能根据首部和尾部的标记，从收到的比特流中识别帧的开始和结束。&lt;/p&gt;&lt;h4 id=&#34;透明传输&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#透明传输&#34;&gt;#&lt;/a&gt; 透明传输&lt;/h4&gt;&lt;p&gt;透明传输是指不管所传数据是什么样的比特组合，都应当能在链路上传送。&lt;/p&gt;&lt;h4 id=&#34;组帧的四种方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#组帧的四种方法&#34;&gt;#&lt;/a&gt; 组帧的四种方法&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;字符计数法：帧首部使用一个记数字段（第一个字节，八位）来标明帧内字符数。&lt;/li&gt;&lt;li&gt;字符填充法：即在数据中心添加转义字符，防止内容中二进制字符与帧首部和尾部字符冲突。&lt;ol&gt;&lt;li&gt;当传送的帧是文本文件时（文本文件的字符都是键盘上输入的，都是 ASCII 码）。不管从键盘上输入什么字符都可以放进帧内传送过去。（透明传输）&lt;/li&gt;&lt;li&gt;当传送的帧是由非 ASCII 码得文本文件组成时（二进制代码的程序或者图像）就要采用字符填充方法实现透明传输。&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;零比特填充法：在发送端，扫描整个信息字段，&lt;strong&gt;只要有连续 5 个 1，就立即填入 1 个 0&lt;/strong&gt;. 在接收端收到一个帧时，先找到标志字段确定边界，再用硬件对比特流进行扫描。&lt;strong&gt;发现连续 5 个 1 时，就把后面的 0 删除&lt;/strong&gt;。&lt;/li&gt;&lt;li&gt;违规编码法：参考曼彻斯特编码，与它不同的是，违规编码法用高 - 高，低 - 低来定界帧的起始和结束。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;由于字节计数法中 Count 字段的脆弱性及字符填充法的复杂性和不兼容性。目前普遍使用的是&lt;strong&gt;零比特填充法&lt;/strong&gt;和&lt;strong&gt;违规编码法&lt;/strong&gt;。&lt;/p&gt;&lt;h3 id=&#34;差错控制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#差错控制&#34;&gt;#&lt;/a&gt; 差错控制&lt;/h3&gt;&lt;h4 id=&#34;差错从何而来&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#差错从何而来&#34;&gt;#&lt;/a&gt; 差错从何而来&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;（全局性）由于线路本身电气特性所产生的&lt;strong&gt;随机噪声&lt;/strong&gt; (热噪声)，是信道固有的，随机存在的。解决方法：提高信噪比来减少和避免干扰。(对传感器下手)&lt;/li&gt;&lt;li&gt;（局部性）外界特定的短暂原因所造成的的&lt;strong&gt;冲击噪声&lt;/strong&gt;，是产生差错的原因。解决办法：通常利用编码技术来解决。&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;差错&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#差错&#34;&gt;#&lt;/a&gt; 差错&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;位错 -- 比特位出错，1 变 0,0 变 1.&lt;/li&gt;&lt;li&gt;帧错&lt;ol&gt;&lt;li&gt;丢失&lt;/li&gt;&lt;li&gt;重复&lt;/li&gt;&lt;li&gt;失序&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;差错控制-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#差错控制-2&#34;&gt;#&lt;/a&gt; 差错控制&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;检错编码&lt;ol&gt;&lt;li&gt;奇偶校验码&lt;ol&gt;&lt;li&gt;奇校验码：在 n-1 位的信息元之前加上一位的校验元，使 1 的个数为奇数&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;循环冗余码 CRC：冗余码的生成以及接收端 CRC 检验都是硬件实现，处理很迅速，因此不会延误数据的传输。&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;纠错编码&lt;ol&gt;&lt;li&gt;海明码&lt;ol&gt;&lt;li&gt;海明距离：两个合法编码的对应比特取值不同的比特数称为这两个码字的&lt;strong&gt;海明距离 (码距)&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;一个有效编码集中，任意&lt;strong&gt;两个合法编码 (码字) 的海明距离的最小值&lt;/strong&gt;称为该编码集的海明距离 (码距)&lt;/li&gt;&lt;li&gt;海明码纠错 d 位，需要码距为 2d+1 的编码方案；检错 d 位，只需要码距为 d+1。&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;凡是接收端数据链路层接受的帧，我们都能以非常接近于 1 的概率认为这些帧在传输过程中没有产生差错。&lt;/p&gt;&lt;p&gt;可靠传输：数据链路层发送端发什么，接收端就收到什么&lt;br&gt;链路层使用 CRC 检验，能够实现无比特差错的传输，但这还不是可靠传输。&lt;/p&gt;&lt;h3 id=&#34;数据链路层的流量控制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据链路层的流量控制&#34;&gt;#&lt;/a&gt; 数据链路层的流量控制&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;较高的发送速度&lt;/strong&gt;和&lt;strong&gt;较低的接受能力&lt;/strong&gt;的不匹配，会造成传输出错，因此流量控制也是数据链路层的一项重要工作。&lt;/p&gt;&lt;p&gt;数据链路层的流量控制是&lt;strong&gt;点对点的&lt;/strong&gt;，而传输层的流量控制是&lt;strong&gt;端到端的&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;数据链路的流量控制手段：接收方收不下就不回复确认。&lt;/p&gt;&lt;p&gt;传输层流量控制手段：接收端给发送端一个窗口公告。&lt;/p&gt;&lt;h3 id=&#34;流量控制方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#流量控制方法&#34;&gt;#&lt;/a&gt; 流量控制方法&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;停止等待协议 (特殊滑动窗口协议): 每发送完一个帧就停止发送，等待对方的确认，在收到确认后再发送下一个帧。&lt;/li&gt;&lt;li&gt;滑动窗口协议&lt;ol&gt;&lt;li&gt;后退 N 帧协议 (GBN)&lt;/li&gt;&lt;li&gt;选择重传协议 (SR)&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;停止 - 等待协议 ---&amp;gt; 发送窗口大小 = 1，接受窗口大小 = 1&lt;br&gt;后退 N 帧协议 (GBN)---&amp;gt; 发送窗口大小 &amp;gt; 1, 接受窗口大小 = 1&lt;br&gt;选择重传协议 (SR)---&amp;gt; 发送窗口大小 &amp;gt; 1, 接受窗口大小 &amp;gt; 1&lt;/p&gt;&lt;p&gt;可靠传输：发送端发啥，接收端接啥&lt;br&gt;流量控制：控制发送速率，使接收方由足够的缓冲空间来接受每一个帧&lt;/p&gt;&lt;p&gt;滑动窗口解决&lt;/p&gt;&lt;ol&gt;&lt;li&gt;流量控制 (收不下就不给确认，想发也不发不了)&lt;/li&gt;&lt;li&gt;可靠传输 (发送方自动重传)&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;停止-等待协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#停止-等待协议&#34;&gt;#&lt;/a&gt; 停止 - 等待协议&lt;/h3&gt;&lt;p&gt;特点:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;简单&lt;/li&gt;&lt;li&gt;信道利用率太低&lt;ol&gt;&lt;li&gt;信道利用率：发送方在一个发送周期内，有效地发送数据所需要的时间占整个发送周期的比率。&lt;/li&gt;&lt;li&gt;信道利用率 =(L/C)/T。&lt;/li&gt;&lt;li&gt;T: 发送周期，从开始发送数据，到收到第一个确认帧为止&lt;/li&gt;&lt;li&gt;L：T 内发送 L 比特数据&lt;/li&gt;&lt;li&gt;C：发送方数据传速率&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;信道吞吐率 = 信道利用率 * 发送方发送速率&lt;/p&gt;&lt;h3 id=&#34;后退n帧协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#后退n帧协议&#34;&gt;#&lt;/a&gt; 后退 N 帧协议&lt;/h3&gt;&lt;p&gt;发送窗口：发送方维持一组持续的允许发送的帧的序号&lt;br&gt;接受窗口：接收方维持一组连续的允许接受帧的序号&lt;/p&gt;&lt;p&gt;GBN 发送方必须响应的三件事&lt;/p&gt;&lt;ol&gt;&lt;li&gt;上层的调用&lt;/li&gt;&lt;li&gt;收到一个 ack: GBN 协议中，对 n 号帧的确认采用 **&amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt;[累计确认]**&amp;lt;/font &amp;gt; 的方式，标明接收方已经收到 N 号帧和他之前的全部帧&lt;/li&gt;&lt;li&gt;超时事件&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;GBN 接收方需要做的事&lt;/p&gt;&lt;ol&gt;&lt;li&gt;如果正确收到 N 号帧，并且按序，那么接收方为 n 帧发送一个 ACK，并且将该帧中的数据部分交付给上层&lt;/li&gt;&lt;li&gt;其余情况都丢弃帧，并为最近按序接受的帧重新发送 ack。接收方无需缓存任何失序帧，只需维护一个信息：expectedseqnum（下一个按序接收的帧序号）&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;滑动窗口长度&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#滑动窗口长度&#34;&gt;#&lt;/a&gt; 滑动窗口长度&lt;/h4&gt;&lt;p&gt;若采用 n 个比特对帧编号，那么发送窗口的尺寸 Wt 应满足 1 《 Wt 《 2^n-1。因为发送窗口尺寸过大，就会使得接收方无法区别新帧和旧帧。&lt;/p&gt;&lt;h4 id=&#34;gbn协议重点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gbn协议重点&#34;&gt;#&lt;/a&gt; GBN 协议重点&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;累积确认 (偶尔捎带确认)&lt;/li&gt;&lt;li&gt;接收方只按顺序接受帧，不按序无情丢弃&lt;/li&gt;&lt;li&gt;确认序列号最大、按序到达的帧&lt;/li&gt;&lt;li&gt;发送窗口最大为 2^n-1， 接收窗口大小为 1&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;gbn协议性能分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gbn协议性能分析&#34;&gt;#&lt;/a&gt; GBN 协议性能分析&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;因连续发送数据帧而提高了信道利用率&lt;/li&gt;&lt;li&gt;在重传时必须把原来已经正确传送的数据帧重传，使传送效率降低&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;选择重传协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#选择重传协议&#34;&gt;#&lt;/a&gt; 选择重传协议&lt;/h3&gt;&lt;h4 id=&#34;sr协议重点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sr协议重点&#34;&gt;#&lt;/a&gt; SR 协议重点&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;对数据帧逐一确认，收一个确认一个&lt;/li&gt;&lt;li&gt;只重传出错帧&lt;/li&gt;&lt;li&gt;接收方有缓存&lt;/li&gt;&lt;li&gt;最大发送窗口和接收窗口为 2^(n-1)&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;信道划分介质访问控制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#信道划分介质访问控制&#34;&gt;#&lt;/a&gt; 信道划分介质访问控制&lt;/h3&gt;&lt;p&gt;信道划分介质访问控制：将使用介质的每个设备与来自同一信道上的其他设备的&lt;strong&gt;通信隔离开&lt;/strong&gt;，把 **&amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt;[时域和频域资源]&amp;lt;/font&amp;gt;** 合理地分配给网络上的设备。&lt;/p&gt;&lt;p&gt;多路复用技术：把多个信号组合在一条物理信道上进行传输，使得多个计算机或者终端设备 **&amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt;[共享信道资源]&amp;lt;/font&amp;gt;**，提高信道利用率。&lt;/p&gt;&lt;p&gt;共享信道：把一条广播信道，逻辑上分成几条用于两个节点之间通信的互不干扰的子信道，&lt;strong&gt;&amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt;[实际上就是把广播信道转变为点对点信道]。&amp;lt;/font&amp;gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;传输数据使用的两种链路&lt;/p&gt;&lt;ol&gt;&lt;li&gt;点对点链路：&lt;ol&gt;&lt;li&gt;两个相邻节点通过一个链路相连，没有第三者。&lt;/li&gt;&lt;li&gt;应用：PPP 协议，常用于广域网&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;广播室链路&lt;ol&gt;&lt;li&gt;所有主机共享通信介质&lt;/li&gt;&lt;li&gt;应用：早起的总线以太网、无线局域网，常用于局域网&lt;/li&gt;&lt;li&gt;典型拓扑结构：总线型、星型 (逻辑总线型)&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;介质访问控制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#介质访问控制&#34;&gt;#&lt;/a&gt; 介质访问控制&lt;/h4&gt;&lt;p&gt;采用一定的措施，使得两对节点之间的通信不会发生互相干扰的情况。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;静态划分信道&lt;ol&gt;&lt;li&gt;频分多路复用 FDM&lt;/li&gt;&lt;li&gt;时分多路复用 TDM&lt;/li&gt;&lt;li&gt;波分多路复用 WDM&lt;/li&gt;&lt;li&gt;码分多路复用 CDM&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;动态分配信道&lt;ol&gt;&lt;li&gt;轮询访问介质访问控制&lt;ol&gt;&lt;li&gt;令牌传递协议&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;随机访问介质访问控制&lt;ol&gt;&lt;li&gt;ALOHA 协议&lt;/li&gt;&lt;li&gt;CSMA 协议&lt;/li&gt;&lt;li&gt;CSMA/CD 协议&lt;/li&gt;&lt;li&gt;CSMA/CA 协议&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;信道划分介质访问控制 (MAC) 协议&lt;/strong&gt;：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;基于多路复用技术划分资源。&lt;/li&gt;&lt;li&gt;网络负载重：共享信道效率高，且公平。&lt;/li&gt;&lt;li&gt;网络负载轻：共享信道效率低。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;随机访问 MAC 协议 (冲突)&lt;/strong&gt;:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;用户根据意愿&lt;strong&gt;随机&lt;/strong&gt;发送消息，发送消息时可独占信道带宽。&lt;/li&gt;&lt;li&gt;网络负载重：产生冲突开销。&lt;/li&gt;&lt;li&gt;网络负载轻：共享信道效率高，单个结点可利用信道全部带宽。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;轮询访问 MAC 协议 / 轮流协议 / 轮转访问 MAC 协议&lt;/strong&gt;：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;既要&lt;strong&gt;不产生冲突&lt;/strong&gt;，又要发送时&lt;strong&gt;占全部带宽&lt;/strong&gt;。&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;频分多路复用fdm&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#频分多路复用fdm&#34;&gt;#&lt;/a&gt; 频分多路复用 FDM&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;用户在分配到一定的频带后，在通信过程中自始至终都占用这个频带。&lt;strong&gt;频分复用的所有用户在同样的时间占用不同的带宽 (频率带宽) 资源&lt;/strong&gt;。&lt;/li&gt;&lt;li&gt;充分利用传输介质带宽，系统&lt;strong&gt;效率较高&lt;/strong&gt;：由于技术比较成熟，实现也比较&lt;strong&gt;容易&lt;/strong&gt;。&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;时分多路复用tdm&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#时分多路复用tdm&#34;&gt;#&lt;/a&gt; 时分多路复用 TDM&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;将时间划分为一段段等长的时分复用帧 (&lt;strong&gt;TDM 帧&lt;/strong&gt;)。每一个时分复用的用户在每一个 TDM 帧中占用固定序号的时隙，所有用户轮流占用信道。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;&amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt;[TDM 帧是在物理层传送的比特流所划分的帧，标志一个周期]&amp;lt;/font&amp;gt;&lt;/strong&gt;。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;时分多路复用 -- 并发&lt;br&gt;频分多路复用 -- 并行&lt;/p&gt;&lt;h4 id=&#34;改进的时分复用-统计时分复用stdm&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#改进的时分复用-统计时分复用stdm&#34;&gt;#&lt;/a&gt; 改进的时分复用 -- 统计时分复用 STDM&lt;/h4&gt;&lt;h4 id=&#34;波分多路复用wdm&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#波分多路复用wdm&#34;&gt;#&lt;/a&gt; 波分多路复用 WDM&lt;/h4&gt;&lt;p&gt;波分多路复用就是 **&amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt;[光的频分多路复用]&amp;lt;/font&amp;gt;**&lt;/p&gt;&lt;h4 id=&#34;码分多路复用cdm&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#码分多路复用cdm&#34;&gt;#&lt;/a&gt; 码分多路复用 CDM&lt;/h4&gt;&lt;p&gt;码分多址 (CDMA) 是码分复用的一种方式&lt;/p&gt;&lt;h4 id=&#34;aloha协议-font-colorred不听就说font&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#aloha协议-font-colorred不听就说font&#34;&gt;#&lt;/a&gt; ALOHA 协议 ---&lt;strong&gt;&amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt; 不听就说 &amp;lt;/font&amp;gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;纯 ALOHA 协议：不监听信道、不按时间槽发送，随机重发。(想发就发)&lt;/p&gt;&lt;p&gt;时隙 ALOHA 协议：把时间分成若干个相同的时间片，所有用户在时间片开始时刻同步接入网络信道，若发生冲突，则必须等到下一个时间片开始时刻再发送。(控制想发就发的随意性)&lt;/p&gt;&lt;ol&gt;&lt;li&gt;纯 ALOHA 协议比时隙 ALOHA 吞吐量更低，效率更低&lt;/li&gt;&lt;li&gt;纯 ALOHA 协议想发就发，时隙 ALOHA 只有在时间片段开始时才能发。&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;csma协议载波监听多路访问协议-font-colorred先听再说font&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#csma协议载波监听多路访问协议-font-colorred先听再说font&#34;&gt;#&lt;/a&gt; CSMA 协议 (载波监听多路访问协议)---&lt;strong&gt;&amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt; 先听再说 &amp;lt;/font&amp;gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;CS: 载波监听 / 监听，每一个站在发送数据之前要检测一下总线上是否有其他计算机在发送数据。&lt;/li&gt;&lt;li&gt;MA：多点接入，表示许多计算机以多点接入的方式连接在一根总线上。&lt;/li&gt;&lt;li&gt;协议思想：发送帧之前，&lt;strong&gt;监听&lt;/strong&gt;信道。&lt;/li&gt;&lt;li&gt;如何监听：当几个站同时在总线上发数据时，总线上的信号&lt;strong&gt;电压摆动值&lt;/strong&gt;会增大。当一个站检测到的信号电压摆动值超过一定门限时，就认为总线上至少有两个站同时在发送数据，表面产生了碰撞，即发生了冲突。&lt;/li&gt;&lt;li&gt;监听结果：&lt;ol&gt;&lt;li&gt;信道空闲：发送完整帧&lt;/li&gt;&lt;li&gt;信道忙：推迟发送&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h5 id=&#34;1-坚持csma&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#1-坚持csma&#34;&gt;#&lt;/a&gt; 1 - 坚持 CSMA&lt;/h5&gt;&lt;p&gt;坚持指的是对于监听信道忙之后的坚持。&lt;/p&gt;&lt;p&gt;1 - 坚持 CSMA 思想：如果一个主机要发送消息，那么它先监听信道。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;空闲则直接传输，不必等待&lt;/li&gt;&lt;li&gt;忙则一直监听，直到空闲马上传输&lt;/li&gt;&lt;li&gt;如果有冲突 (一段时间内未收到肯定回复)，则等待一个随机长的时间再监听，重复上述过程。&lt;br&gt;优点：只要媒体空闲，站点就马上发送，避免了媒体利用率的损失。&amp;lt;br&amp;gt;&lt;br&gt;缺点：如果有两个或者两个以上的站点有数据要发送，冲突就不可避免。&lt;/li&gt;&lt;/ol&gt;&lt;h5 id=&#34;非坚持csma&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#非坚持csma&#34;&gt;#&lt;/a&gt; 非坚持 CSMA&lt;/h5&gt;&lt;p&gt;非坚持指的是对于监听信道忙之后就不继续监听。&lt;/p&gt;&lt;p&gt;非坚持 CSMA 思想：如果一个主机要发送消息，那么它先监听信道。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;空闲则直接传输，不必等待&lt;/li&gt;&lt;li&gt;忙则等待一个随机的时间之后再进行监听&lt;br&gt;优点：采用随机的重发延迟时间可以减少冲突发送的可能。&amp;lt;br&amp;gt;&lt;br&gt;缺点：可能存在大家都在延迟等待的过程中，使得媒体仍可能处于空闲状态，媒体使用率降低。&lt;/li&gt;&lt;/ol&gt;&lt;h5 id=&#34;p-坚持csma&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#p-坚持csma&#34;&gt;#&lt;/a&gt; p - 坚持 CSMA&lt;/h5&gt;&lt;p&gt;p - 坚持指的是对于监听信道空闲的处理&lt;/p&gt;&lt;p&gt;p - 坚持 CSMA 思想：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;如果一个主机要发送消息，那么它先监听信道&lt;/li&gt;&lt;li&gt;空闲则以 p 概率直接传输，不必等待；概率 1-p 等待到下一个时间槽再传输。&lt;/li&gt;&lt;li&gt;忙则持续监听直到信道空闲在以 p 概率发送。&lt;/li&gt;&lt;li&gt;若冲突则等到下一个时间槽开始再监听并重复上述过程。&lt;br&gt;优点：既能像非坚持算法那样减少冲突，又能像 1 - 坚持算法那样减少媒体空闲时间的这种方案。&amp;lt;br&amp;gt;&lt;br&gt;缺点：发送冲突后还是要坚持把数据帧发送完，造成了浪费。&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;csmacd协议载波监听多点接入碰撞检测协议-font-colorred先听再说边听边说font&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#csmacd协议载波监听多点接入碰撞检测协议-font-colorred先听再说边听边说font&#34;&gt;#&lt;/a&gt; CSMA/CD 协议 (载波监听多点接入 / 碰撞检测协议)---&lt;strong&gt;&amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt; 先听再说，边听边说 &amp;lt;/font&amp;gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;CS: 载波监听 / 监听，每一个站在&lt;strong&gt;发送数据之前&lt;/strong&gt;及&lt;strong&gt;发送数据时&lt;/strong&gt;要检测一下总线上是否有其他计算机在发送数据。&lt;/li&gt;&lt;li&gt;MA：多点接入，表示许多计算机以多点接入的方式连接在一根总线上。&lt;/li&gt;&lt;li&gt;CD：碰撞检测 (冲突检测)，&amp;quot;&lt;strong&gt;&amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt;[边发送边监听]&lt;/strong&gt;&amp;lt;/font&amp;gt;&amp;quot;, 适配器边发送数据边检测信道上信号电压的变化情况，以便判断自己在发送数据时其他站是否也在发送数据。&lt;/li&gt;&lt;/ol&gt;&lt;h5 id=&#34;先听后发为什么还会冲突&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#先听后发为什么还会冲突&#34;&gt;#&lt;/a&gt; 先听后发为什么还会冲突？&lt;/h5&gt;&lt;p&gt;因为电磁波在总线上总是以有限的速率传播。&lt;/p&gt;&lt;h5 id=&#34;如何确定碰撞后的重传时机&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#如何确定碰撞后的重传时机&#34;&gt;#&lt;/a&gt; 如何确定碰撞后的重传时机&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;截断二进制指数规避算法&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;确定基本推迟时间为争用期 2τ&lt;/li&gt;&lt;li&gt;定义参数 k，它等于重传次数，但 k 不超过 10，即 k=min [重传次数，10]。当重传次数不超过 10 次时，k 等于重传次数；当重传次数大于 10 时，k 就不在增大而一直等于 10。&lt;/li&gt;&lt;li&gt;从离散的整数集合 [0,1,,2^k-1] 中随机抽取一个数 r，重传所需退避时间就是 r 倍的基本退避时间，即 2rτ。&lt;/li&gt;&lt;li&gt;当重传达 &amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt;&lt;strong&gt;[16 次]&lt;/strong&gt;&amp;lt;/font&amp;gt; 仍不能成功时，说明网络太拥挤，认为此帧永远无法正确发出，抛弃此帧并向高层报告出错。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;若连续多次产生冲突，就标明可能有 &amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt;&lt;strong&gt;[较多的站参与争用]&lt;/strong&gt;&amp;lt;/font&amp;gt; 信道。使用此算法可使重传需要推迟的平均时间随重传次数的增大而增大，因而减小发送碰撞的概率，有利于整个系统的稳定。&lt;/p&gt;&lt;h5 id=&#34;最小帧长&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#最小帧长&#34;&gt;#&lt;/a&gt; 最小帧长&lt;/h5&gt;&lt;p&gt;帧的传输时延至少要两倍于信号在总线中的传播时延&lt;/p&gt;&lt;p&gt;最小帧长 = 总线传播时延 * 数据传输速率 * 2 = 2τ * 数据传输速率&lt;/p&gt;&lt;p&gt;&lt;strong&gt;以太网规定最短帧长为 64B，凡是长度小于 64B 的都是由于冲突而异常终止的无效帧。&lt;/strong&gt;&lt;/p&gt;&lt;h4 id=&#34;csmaca协议载波监听多点接入碰撞避免协议-font-colorred先听再说font&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#csmaca协议载波监听多点接入碰撞避免协议-font-colorred先听再说font&#34;&gt;#&lt;/a&gt; CSMA/CA 协议 (载波监听多点接入 / 碰撞避免协议)---&lt;strong&gt;&amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt; 先听再说 &amp;lt;/font&amp;gt;&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;发送数据前，先检测信道是否空闲。&lt;/li&gt;&lt;li&gt;空闲则发出&lt;strong&gt; RTS&lt;/strong&gt;，RTS 包括发射端的地址、接收端的地址、下一份数据将持续发送的时间等信息；信道忙则等待。&lt;/li&gt;&lt;li&gt;接收端收到 RTS 后，则响应&lt;strong&gt; CTS&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;发送端收到 CTS 后，开始发送数据帧 (同时预约信道：发送方告知其他站点自己要传多久数据)&lt;/li&gt;&lt;li&gt;接收端收到数据帧后，将用 CRC 来检验数据是否正确，正确则响应 ACK 帧。&lt;/li&gt;&lt;li&gt;发送方收到 ACK 就可以进行下一个数据帧的发送，若没有则一直重传至规定重发次数为止 (采用二进制指数退避算法来确定随机的推迟时间)。&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;csmacd与csmaca&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#csmacd与csmaca&#34;&gt;#&lt;/a&gt; CSMA/CD 与 CSMA/CA&lt;/h4&gt;&lt;p&gt;相同点：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;CSMA/CD 与 CSMA/CA 机制都从属于 CSMA 的思路，其核心是 **&amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt;[先听后说]&amp;lt;/font&amp;gt;**。换言之，两个在接入信道之前都须要进行监听。当发现信道空闲后，才能进行接入。&lt;br&gt;不同点：&lt;/li&gt;&lt;li&gt;传输介质不同: CSMA/CD 用于总线式以太网 (有线)，而 CSMA/CA 用于无线局域网 (无线)。&lt;/li&gt;&lt;li&gt;载波检测方式不同：因传输介质不同，CSMA/CD 与 CSMA/CA 的检测方式不用。CSMA/CD 通过电缆中电压的变化来检测，当数据发生碰撞时，电缆中的电压会随着发生变化；而 CSMA/CA 采用能量检测 (ED)、载波检测 (CS) 和能量载波混合检测三种检测信道空闲的方式。&lt;/li&gt;&lt;li&gt;CSMA/CD 检测冲突，CSMA/CA 避免冲突，二者出现冲突后都会进行&lt;strong&gt;有上限的重传&lt;/strong&gt;。&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;轮询协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#轮询协议&#34;&gt;#&lt;/a&gt; 轮询协议&lt;/h4&gt;&lt;p&gt;主节点轮流&lt;strong&gt;邀请&lt;/strong&gt;从属节点发送数据。&lt;/p&gt;&lt;h4 id=&#34;令牌传递协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#令牌传递协议&#34;&gt;#&lt;/a&gt; 令牌传递协议&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;令牌：一个特殊格式的&lt;strong&gt; MAC&lt;/strong&gt; 控制帧，不含任何信息。控制信道的使用，确保同一时刻只有一个结点独占信道。&lt;/li&gt;&lt;li&gt;每个节点都可以在一定的时间内 (令牌持有时间) 获得发送数据的权利，并不是无限制地持有令牌。&lt;/li&gt;&lt;li&gt;应用于令牌环网 (&lt;strong&gt;物理星型拓扑、逻辑环型拓扑&lt;/strong&gt;)。&lt;/li&gt;&lt;li&gt;令牌传送方式的网络常用于&lt;strong&gt;负载较重、通信量较大&lt;/strong&gt;的网络中。&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;局域网&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#局域网&#34;&gt;#&lt;/a&gt; 局域网&lt;/h3&gt;&lt;p&gt;在&lt;strong&gt;某一区域内&lt;/strong&gt;由多台计算机互连组成的计算机组，使用&lt;strong&gt;广播信道&lt;/strong&gt;&lt;/p&gt;&lt;h4 id=&#34;局域网介质访问控制方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#局域网介质访问控制方法&#34;&gt;#&lt;/a&gt; 局域网介质访问控制方法&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;CSMA/CD 常用于&lt;strong&gt;总线型局域网&lt;/strong&gt;，也用于树形网络&lt;/li&gt;&lt;li&gt;令牌总线，常用于&lt;strong&gt;总线型局域网&lt;/strong&gt;，也用于树形网络&lt;/li&gt;&lt;li&gt;令牌环， 用于&lt;strong&gt;环型局域网&lt;/strong&gt;，比如令牌环网&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;局域网的分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#局域网的分类&#34;&gt;#&lt;/a&gt; 局域网的分类&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;以太网 (IEEE802.3)&lt;/li&gt;&lt;li&gt;令牌环网 (IEEE802.5)&lt;/li&gt;&lt;li&gt;FDDI 网 (IEEE802.8)&lt;/li&gt;&lt;li&gt;ATM 网&lt;/li&gt;&lt;li&gt;无线局域网 (IEEE802.11)&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;mac子层和llc子层&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mac子层和llc子层&#34;&gt;#&lt;/a&gt; MAC 子层和 LLC 子层&lt;/h4&gt;&lt;p&gt;IEEE802 标准所描述的局域网参考模型只对应 OSI 参考模型的&lt;strong&gt;数据链路层与物理层&lt;/strong&gt;，它将数据链路层划分为&lt;strong&gt;逻辑链路层 LLC 子层&lt;/strong&gt;和&lt;strong&gt;介质访问控制 MAC 子层&lt;/strong&gt;。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;LLC 负责识别网络层协议，然后对他们进行封装。&lt;/li&gt;&lt;li&gt;MAC 子层的主要功能包括&lt;strong&gt;数据帧的封装 / 卸装&lt;/strong&gt;，&lt;strong&gt;帧的寻址和识别&lt;/strong&gt;，&lt;strong&gt;帧的接受与发送&lt;/strong&gt;，链路的管理，帧的差错控制等。MAC 子层的存在屏蔽了不同物理链路种类的差异性。&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;以太网&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#以太网&#34;&gt;#&lt;/a&gt; 以太网&lt;/h4&gt;&lt;p&gt;指由 Xerox 公司创建并由 Xerox、Intel 和 DEC 公司联合开发的 &amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt;&lt;strong&gt; 基带总线局域网规范&lt;/strong&gt; &amp;lt;/font&amp;gt;，是当今现有局域网采用的最通用的通信协议标准。以太网络使用&lt;strong&gt; CSMA/CD&lt;/strong&gt; 技术。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;造价低廉&lt;/li&gt;&lt;li&gt;是应用最广泛的局域网技术&lt;/li&gt;&lt;li&gt;比令牌环网、ATM 网便宜、简单&lt;/li&gt;&lt;li&gt;满足网络速率要求：10Mb/s-10Gb/s&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;以太网标准：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;DIX Ethernet V2: 第一个局域网产品 (以太网) 规约。&lt;/li&gt;&lt;li&gt;IEEE802.3：IEEE802 委员会 802.3 工作组制定的第一个 IEEE 的以太网标准。(帧格式有一丢丢改动)&lt;/li&gt;&lt;/ol&gt;&lt;h5 id=&#34;以太网提供无连接-不可靠的服务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#以太网提供无连接-不可靠的服务&#34;&gt;#&lt;/a&gt; 以太网提供无连接、不可靠的服务&lt;/h5&gt;&lt;ol&gt;&lt;li&gt;无连接：发送方和接收方之间无&lt;strong&gt;握手过程&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;不可靠：不对发送方的数据帧&lt;strong&gt;编号&lt;/strong&gt;，接收方不向发送方进行&lt;strong&gt;确认&lt;/strong&gt;，差错帧直接丢弃，差错纠正由高层负责。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt;&lt;strong&gt; 以太网只实现无差错接收，不实现可靠传输。&lt;/strong&gt;&amp;lt;/font&amp;gt;&lt;/p&gt;&lt;h5 id=&#34;以太网传输介质与拓扑结构的发展&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#以太网传输介质与拓扑结构的发展&#34;&gt;#&lt;/a&gt; 以太网传输介质与拓扑结构的发展&lt;/h5&gt;&lt;p&gt;以太网拓扑：逻辑上总线型，物理上星型。&lt;/p&gt;&lt;h5 id=&#34;10bast-t以太网&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#10bast-t以太网&#34;&gt;#&lt;/a&gt; 10BAST-T 以太网&lt;/h5&gt;&lt;ol&gt;&lt;li&gt;10BAST-T 是传送&lt;strong&gt;基带信号&lt;/strong&gt;的双绞线以太网，T 表示采用双绞线，现 10BAST-T 采用的是&lt;strong&gt;无屏蔽双绞线&lt;/strong&gt; (UTP), 传输速率是&lt;strong&gt; 10Mb&lt;/strong&gt;/s。&lt;/li&gt;&lt;li&gt;物理上采用星型拓扑，逻辑上总线型拓扑，每段双绞线最长为 100M。&lt;/li&gt;&lt;li&gt;采用曼彻斯特编码。&lt;/li&gt;&lt;li&gt;采用 CSMA/CD 介质访问控制。&lt;/li&gt;&lt;/ol&gt;&lt;h5 id=&#34;高速以太网&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#高速以太网&#34;&gt;#&lt;/a&gt; 高速以太网&lt;/h5&gt;&lt;p&gt;速度&lt;strong&gt;大于 100Mb/s&lt;/strong&gt; 的以太网称为高速以太网。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;100BAST-T 以太网:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;在&lt;strong&gt;双绞线&lt;/strong&gt;上传送&lt;strong&gt; 100Mb/s 基带信号&lt;/strong&gt;的&lt;strong&gt;星型&lt;/strong&gt;拓扑以太网，仍使用 IEEE802.3 的 CSMA/CD 协议。&lt;/li&gt;&lt;li&gt;支持全双工和半双工，可在全双工方式下工作而无冲突。&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;吉比特以太网&lt;/p&gt;&lt;ol&gt;&lt;li&gt;在&lt;strong&gt;光纤或者双绞线&lt;/strong&gt;上传送&lt;strong&gt; 1Gb/s 信号&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;支持全双工和半双工，可在全双工方式下工作而无冲突&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;10 吉比特&lt;/p&gt;&lt;ol&gt;&lt;li&gt;10 吉比特以太网在&lt;strong&gt;光纤&lt;/strong&gt;上传送&lt;strong&gt; 10Gb/s 信号&lt;/strong&gt;。&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h5 id=&#34;以太网mac帧&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#以太网mac帧&#34;&gt;#&lt;/a&gt; 以太网 MAC 帧&lt;/h5&gt;&lt;p&gt;最常用的 MAC 帧是&lt;strong&gt;以太网 V2&lt;/strong&gt; 的格式。&lt;/p&gt;&lt;p&gt;以太网 V2 与 IEEE802.3 的区别：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;第三个字段是长度 / 类型&lt;/li&gt;&lt;li&gt;当长度 / 类型字段值小于 0x600 时，数据字段必须装入 LLC 子层。&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;适配器和mac地址&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#适配器和mac地址&#34;&gt;#&lt;/a&gt; 适配器和 MAC 地址&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;计算机与外界有局域网的连接是通过&lt;strong&gt;通信适配器&lt;/strong&gt;的。&lt;/li&gt;&lt;li&gt;在局域网中，硬件地址又称为物理地址，或&lt;strong&gt; MAC 地址&lt;/strong&gt;（实际上是标识符）。&lt;/li&gt;&lt;li&gt;MAC 地址：每个适配器有一个全球唯一的 48 位二进制地址，前 24 位代表厂家 (由 IEEE 规定)，后 24 位厂家自己指定。常用 6 个十六进制数表示。&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;ieee-80211&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ieee-80211&#34;&gt;#&lt;/a&gt; IEEE 802.11&lt;/h4&gt;&lt;p&gt;IEEE 802.11 是&lt;strong&gt;无线局域网&lt;/strong&gt;通用的标准，它是由 IEEE 所定义的无线网络通信的标准。&lt;/p&gt;&lt;h3 id=&#34;广域网&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#广域网&#34;&gt;#&lt;/a&gt; 广域网&lt;/h3&gt;&lt;p&gt;使用&lt;strong&gt;分组交换技术&lt;/strong&gt;。&lt;/p&gt;&lt;h4 id=&#34;ppp协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ppp协议&#34;&gt;#&lt;/a&gt; PPP 协议&lt;/h4&gt;&lt;p&gt;点对点协议，目前使用最广泛的数据链路层协议，用户使用拨号电话接入因特网时一般都用 PPP 协议。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;font color=&amp;quot;red&amp;quot;&amp;gt;&lt;strong&gt; 只支持全双工链路。&lt;/strong&gt;&amp;lt;/font&amp;gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;ppp 协议应满足的要求：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;简单：对于链路层的帧，无需纠错，无需序号，无需流量控制&lt;/li&gt;&lt;li&gt;封装成帧&lt;/li&gt;&lt;li&gt;透明传输&lt;/li&gt;&lt;li&gt;多种网络层协议&lt;/li&gt;&lt;li&gt;多种类型链路&lt;/li&gt;&lt;li&gt;差错检测&lt;/li&gt;&lt;li&gt;检测连接状态&lt;/li&gt;&lt;li&gt;最大传送单元&lt;/li&gt;&lt;li&gt;网络层地址协商&lt;/li&gt;&lt;li&gt;数据压缩协商&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;PPP 协议无需满足的要求：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;纠错&lt;/li&gt;&lt;li&gt;流量控制&lt;/li&gt;&lt;li&gt;序号&lt;/li&gt;&lt;li&gt;不支持多点线路&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;PPP 协议组成部分&lt;/p&gt;&lt;ol&gt;&lt;li&gt;一个将 IP 数据报封装到串行链路 (同步串行 / 异步串行) 的方法&lt;/li&gt;&lt;li&gt;链路控制协议 LCP：建立并维护数据链路连接。(&lt;strong&gt;身份验证&lt;/strong&gt;)&lt;/li&gt;&lt;li&gt;网络控制协议 NCP：PPP 可支持多种网络层协议，每个不同的网络层协议都要一个相应地 NCP 来配置，为网络层协议建立和配置逻辑连接。&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;hdlc协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hdlc协议&#34;&gt;#&lt;/a&gt; HDLC 协议&lt;/h4&gt;&lt;p&gt;高级数据链路控制协议，是一个在同步网上传输数据、&lt;strong&gt;面向比特&lt;/strong&gt;的数据链路层协议。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt;&lt;strong&gt; 采用全双工通信。&lt;/strong&gt;&amp;lt;/font&amp;gt;&lt;/li&gt;&lt;li&gt;所有帧采用&lt;strong&gt; CRC 检验&lt;/strong&gt;，对信息帧进行顺序&lt;strong&gt;编号&lt;/strong&gt;，可防止漏收或重份，传输可靠性高。&lt;/li&gt;&lt;/ol&gt;&lt;h5 id=&#34;hdlc的站&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#hdlc的站&#34;&gt;#&lt;/a&gt; HDLC 的站&lt;/h5&gt;&lt;ol&gt;&lt;li&gt;主站&lt;/li&gt;&lt;li&gt;从站&lt;/li&gt;&lt;li&gt;复合站&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;三种数据操作方式&lt;/p&gt;&lt;ol&gt;&lt;li&gt;正常响应方式&lt;/li&gt;&lt;li&gt;异步平衡方式&lt;/li&gt;&lt;li&gt;异步响应方式&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;HDLC 帧的类型：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;信息帧，用来传输数据信息&lt;/li&gt;&lt;li&gt;监督帧，用来流量控制盒差错控制&lt;/li&gt;&lt;li&gt;无编号帧，用来提供对链路的建立、拆除等多种控制功能。&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;ppp协议和hdlc协议&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ppp协议和hdlc协议&#34;&gt;#&lt;/a&gt; PPP 协议和 HDLC 协议&lt;/h4&gt;&lt;p&gt;相同点：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;只支持全双工链路&lt;/li&gt;&lt;li&gt;都可以实现透明传输&lt;/li&gt;&lt;li&gt;都可以实现差错检测，但不纠正差错&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;不同点：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;PPP 协议面向字节，HDLC 面向比特&lt;/li&gt;&lt;li&gt;PPP 协议不可靠，HDLC 协议可靠&lt;/li&gt;&lt;li&gt;PPP 协议无序号和确认机制，HDLC 协议有编号和确认机制&lt;/li&gt;&lt;li&gt;PPP 协议有 2B 的协议字段，HDLC 无&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;链路层设备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#链路层设备&#34;&gt;#&lt;/a&gt; 链路层设备&lt;/h3&gt;&lt;h4 id=&#34;网桥&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#网桥&#34;&gt;#&lt;/a&gt; 网桥&lt;/h4&gt;&lt;p&gt;网桥根据&lt;strong&gt; MAC 帧的目的地址&lt;/strong&gt;对帧进行&lt;strong&gt;转发&lt;/strong&gt;和&lt;strong&gt;过滤&lt;/strong&gt;。&lt;/p&gt;&lt;p&gt;网桥优点：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;过滤通信量，增大吞吐量&lt;/li&gt;&lt;li&gt;扩大了物理范围&lt;/li&gt;&lt;li&gt;提高可靠性&lt;/li&gt;&lt;li&gt;可互连不同物理层、不同 MAC 子层和不同速率的以太网。&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;透明网桥源路由网桥&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#透明网桥源路由网桥&#34;&gt;#&lt;/a&gt; 透明网桥 &amp;amp; 源路由网桥&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;透明网桥：指以太网上的站点并不知道所发送的帧将经过哪几个网桥，是一种即插即用设备 -- 自学习。&lt;/li&gt;&lt;li&gt;源路由网桥：在发送帧时，把详细的最佳路由信息 (路由最少 / 时间最短) 放在帧的首部中。方法：源站以广播方式向欲通信的目的站发送一个&lt;strong&gt;发现帧&lt;/strong&gt;。&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;多接口网桥-以太网交换机&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#多接口网桥-以太网交换机&#34;&gt;#&lt;/a&gt; 多接口网桥 -- 以太网交换机&lt;/h4&gt;&lt;p&gt;独占媒体带宽&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;直通式交换机&lt;/p&gt;&lt;ol&gt;&lt;li&gt;查完目的地址 (6B) 就立刻转发。&lt;/li&gt;&lt;li&gt;延迟小，可靠性低，无法支持具有不同速率的端口的交换。&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;存储转发式交换机 (常用)&lt;/p&gt;&lt;ol&gt;&lt;li&gt;将帧放入高速缓存，并检查是否正确，正确则转发，错误则丢弃。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;延迟大，可靠性高&lt;/strong&gt;，可以支持具有不同速率的端口的交换。&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 id=&#34;应用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#应用&#34;&gt;#&lt;/a&gt; 应用&lt;/h2&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://oreki.world/kaoyan/system/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</guid>
            <title>计算机操作系统概述</title>
            <link>http://oreki.world/kaoyan/system/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</link>
            <category term="考研" scheme="http://oreki.world/categories/kaoyan/" />
            <category term="操作系统" scheme="http://oreki.world/categories/kaoyan/system/" />
            <category term="计算机网络" scheme="http://oreki.world/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/" />
            <category term="考研" scheme="http://oreki.world/tags/%E8%80%83%E7%A0%94/" />
            <pubDate>Tue, 13 Apr 2021 00:01:14 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h2 id=&#34;操作系统的概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#操作系统的概念&#34;&gt;#&lt;/a&gt; 操作系统的概念&lt;/h2&gt;&lt;ol&gt;&lt;li&gt;** 操作系统是系统资源的管理者。** 控制和管理整个计算机系统的硬件和软件资源，并合理地组织调度计算机的工作和资源的分配，以提供给用户和其他软件方便的接口和环境。它是计算机系统中最基本的系统软件。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;操作系统向上层提供方便易用的服务。&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;最接近硬件的一层软件。&lt;/strong&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;操作系统提供的功能：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;设备管理&lt;/li&gt;&lt;li&gt;存储器管理&lt;/li&gt;&lt;li&gt;处理机 (CPU) 管理&lt;/li&gt;&lt;li&gt;文件管理&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;操作系统向上层提供的易用的服务:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;GUI: 图形化用户接口&lt;/li&gt;&lt;li&gt;命令接口&lt;ol&gt;&lt;li&gt;联机命令接口 (交互式命令接口)&lt;/li&gt;&lt;li&gt;脱机命令接口 (批处理命令接口)&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;程序接口：可以再程序中进行系统调用来使用程序接口。普通用户不能直接使用程序接口，只能通过程序代码间接使用。有一系列的系统调用组成。&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;操作系统的功能和目标&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#操作系统的功能和目标&#34;&gt;#&lt;/a&gt; 操作系统的功能和目标&lt;/h3&gt;&lt;p&gt;需要实现&lt;strong&gt;对硬件机器的拓展&lt;/strong&gt;。&amp;lt;br&amp;gt;&lt;br&gt;没有任何软件支持的计算机称为&lt;strong&gt;裸机&lt;/strong&gt;。在裸机上安装的操作系统，可以提供资源管理功能和方便用户的服务功能，将裸机改造成功能更强，使用更方便的机器。&amp;lt;br&amp;gt;&lt;br&gt;通常把覆盖了软件的机器称为&lt;strong&gt;扩充机器&lt;/strong&gt;，又称之为&lt;strong&gt;虚拟机&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;操作系统对硬件机器的扩展：&amp;lt;br&amp;gt;&lt;br&gt;将 CPU、内存、显示器、键盘灯硬件合理地组合起来，让各种硬件能够相互协调配合，实现更复杂的功能。&lt;/p&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://oreki.world/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0%E7%9A%84%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%92%8C%E5%80%BC%E5%9F%9F/</guid>
            <title>三角函数的定义域和值域</title>
            <link>http://oreki.world/%E4%B8%89%E8%A7%92%E5%87%BD%E6%95%B0%E7%9A%84%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%92%8C%E5%80%BC%E5%9F%9F/</link>
            <pubDate>Mon, 05 Apr 2021 22:03:45 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h3 id=&#34;反三角函数的定义域和值域&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#反三角函数的定义域和值域&#34;&gt;#&lt;/a&gt; 反三角函数的定义域和值域&lt;/h3&gt;&lt;h4 id=&#34;反正弦函数yarcsinx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#反正弦函数yarcsinx&#34;&gt;#&lt;/a&gt; 反正弦函数 y=arcsinx，&lt;/h4&gt;&lt;p&gt;表示一个正弦值为 x 的角，该角的范围在 [-π/2，π/2] 区间内。&amp;lt;br&amp;gt;&lt;br&gt;定义域 [-1，1] ，值域 [-π/2，π/2]。&amp;lt;br&amp;gt;&lt;/p&gt;&lt;h4 id=&#34;反余弦函数yarccosx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#反余弦函数yarccosx&#34;&gt;#&lt;/a&gt; 反余弦函数 y=arccosx，&lt;/h4&gt;&lt;p&gt;表示一个余弦值为 x 的角，该角的范围在 [0，π] 区间内。&amp;lt;br&amp;gt;&lt;br&gt;定义域 [-1，1] ， 值域 [0，π]。&amp;lt;br&amp;gt;&lt;/p&gt;&lt;h4 id=&#34;反正切函数yarctanx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#反正切函数yarctanx&#34;&gt;#&lt;/a&gt; 反正切函数 y=arctanx，&lt;/h4&gt;&lt;p&gt;表示一个正切值为 x 的角，该角的范围在 (-π/2，π/2) 区间内。&amp;lt;br&amp;gt;&lt;br&gt;定义域 R，值域 (-π/2，π/2)。&amp;lt;br&amp;gt;&lt;/p&gt;&lt;h4 id=&#34;反余切函数yarccotx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#反余切函数yarccotx&#34;&gt;#&lt;/a&gt; 反余切函数 y=arccotx，&lt;/h4&gt;&lt;p&gt;表示一个余切值为 x 的角，该角的范围在 (0，π) 区间内。&amp;lt;br&amp;gt;&lt;br&gt;定义域 R，值域 (0，π)。&amp;lt;br&amp;gt;&lt;/p&gt;&lt;h4 id=&#34;反正割函数yarcsecx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#反正割函数yarcsecx&#34;&gt;#&lt;/a&gt; 反正割函数 y=arcsecx，&lt;/h4&gt;&lt;p&gt;表示一个正割值为 x 的角，该角的范围在 [0,π/2) U (π/2,π] 区间内。&amp;lt;br&amp;gt;&lt;br&gt;定义域 (-∞,-1] U [1,+∞), 值域 [0,π/2) U (π/2,π]。&amp;lt;br&amp;gt;&lt;/p&gt;&lt;h4 id=&#34;反余割函数yarccscx&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#反余割函数yarccscx&#34;&gt;#&lt;/a&gt; 反余割函数 y=arccscx，&lt;/h4&gt;&lt;p&gt;表示一个余割值为 x 的角，该角的范围在 [-π/2,0) U (0,π/2] 区间内。&amp;lt;br&amp;gt;&lt;br&gt;定义域 (-∞,-1] U [1,+∞), 值域 [-π/2,0) U (0,π/2]。&amp;lt;br&amp;gt;&lt;/p&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://oreki.world/kaoyan/computer-composition/408%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</guid>
            <title>408计算机组成原理-计算机系统概述</title>
            <link>http://oreki.world/kaoyan/computer-composition/408%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</link>
            <category term="考研" scheme="http://oreki.world/categories/kaoyan/" />
            <category term="计算机组成" scheme="http://oreki.world/categories/kaoyan/computer-composition/" />
            <category term="考研" scheme="http://oreki.world/tags/%E8%80%83%E7%A0%94/" />
            <category term="计算机组成" scheme="http://oreki.world/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/" />
            <pubDate>Tue, 30 Mar 2021 23:52:58 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h2 id=&#34;什么是计算机系统&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是计算机系统&#34;&gt;#&lt;/a&gt; 什么是计算机系统&lt;/h2&gt;&lt;p&gt;计算机系统 = 硬件 + 软件&lt;/p&gt;&lt;h3 id=&#34;软件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#软件&#34;&gt;#&lt;/a&gt; 软件&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;系统软件：用来管理整个计算机系统&lt;ol&gt;&lt;li&gt;操作系统&lt;/li&gt;&lt;li&gt;数据库管理系统&lt;/li&gt;&lt;li&gt;标准程序库&lt;/li&gt;&lt;li&gt;网络软件&lt;/li&gt;&lt;li&gt;语言处理程序&lt;/li&gt;&lt;li&gt;服务程序&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;应用软件：按任务需要编制的各种程序&lt;/li&gt;&lt;/ol&gt;&lt;h2 id=&#34;11-计算机发展历程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#11-计算机发展历程&#34;&gt;#&lt;/a&gt; 1.1 计算机发展历程&lt;/h2&gt;&lt;h3 id=&#34;计算机的四代变化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计算机的四代变化&#34;&gt;#&lt;/a&gt; 计算机的四代变化&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;1946-1957 电子管时代（语言：机器语言，内存：磁鼓、汞延迟线，外存：穿孔卡片、纸带）&lt;/li&gt;&lt;li&gt;1958-1964 晶体管时代（语言：面向过程的 FORTRAN，内存：磁芯存储器，外存：磁带，有了操作系统的雏形）&lt;/li&gt;&lt;li&gt;1965-1971 中小规模集成电路时代（高级语言迅速发展，有了分时操作系统，内存：半导体存储器，外存：磁带、磁盘）&lt;/li&gt;&lt;li&gt;1972 至今 超大规模集成电路时代（出现了微处理器 (cpu)，微型计算机）&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;计算机元件的更新换代&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计算机元件的更新换代&#34;&gt;#&lt;/a&gt; 计算机元件的更新换代&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;摩尔定律。当价格不变时，集成电路上的晶体管数目约隔 18 个月便会增加一倍，性能也提升一倍。18 个月后同样的钱买到的 CPU，后者性能是前者的两倍。&lt;/li&gt;&lt;li&gt;半导体存储器发展。1970 年第一个半导体存储器由仙童半导体公司生产。半导体存储器到现在经历了 11 代发展。&lt;/li&gt;&lt;li&gt;微处理器。处理器中的 32 位，64 位是指计算机进行一次整数运算所能处理的二进制数据的位数。&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;计算机的分类和发展方向&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计算机的分类和发展方向&#34;&gt;#&lt;/a&gt; 计算机的分类和发展方向&lt;/h3&gt;&lt;p&gt;两极分化：&lt;br&gt;一极是微信计算机向更微型化、网络化、高性能、多用途方向发展。&amp;lt;br&amp;gt;&lt;br&gt;另一极是巨型化向更巨型化、超高速、并行处理、智能化方向发展。&lt;/p&gt;&lt;h3 id=&#34;冯诺依曼计算机的特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#冯诺依曼计算机的特点&#34;&gt;#&lt;/a&gt; 冯诺依曼计算机的特点&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;计算机由五大部件组成：运算器、储存器、控制器、输入设备、输出设备&lt;/li&gt;&lt;li&gt;指令和数据以同等地位存于存储器，并可按地址寻访&lt;/li&gt;&lt;li&gt;指令和数据用二进制表示&lt;/li&gt;&lt;li&gt;指令有操作码和地址码组成&lt;br&gt;5 . 指令在存储器内按顺序存放（&lt;strong&gt;存储程序&lt;/strong&gt;）.exe 文件执行时先按顺序存放到存储器中，然后存储器一条条执行&lt;/li&gt;&lt;li&gt;机器以运算器为中心，输入输出设备与存储器间的数据传送通过运算器完成&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;现代计算机：&amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt;&lt;strong&gt; 以存储器为核心&lt;/strong&gt; &amp;lt;/font&amp;gt;。CPU = 运算器 + 控制器。&lt;/p&gt;&lt;p&gt;在计算机系统中，&lt;strong&gt;软件和硬件在逻辑上是 &amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt; 等效 &amp;lt;/font &amp;gt; 的&lt;/strong&gt;。&lt;/p&gt;&lt;h3 id=&#34;存储器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#存储器&#34;&gt;#&lt;/a&gt; 存储器&lt;/h3&gt;&lt;p&gt;计算机的存储部件，用来存放数据和程序&lt;/p&gt;&lt;p&gt;存储器分为主存储器 (内存) 和辅存储器 (外存)。CPU 能够直接访问主存，辅存的信息比如调入主存，cpu 才能访问。&lt;/p&gt;&lt;p&gt;主存储器构成：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;存储体：用来存放数据，由一系列存储元件构成，用来存放二进制 0 或 1，数据在存储体内按地址存储。&lt;ol&gt;&lt;li&gt;存储单元：每个存储单元存放一串二进制代码&lt;/li&gt;&lt;li&gt;存储字 (word)：存储单元中二进制代码的组合&lt;/li&gt;&lt;li&gt;存储字长：存储单元中二进制代码的位数&lt;/li&gt;&lt;li&gt;即存储二进制的电子元件，每个存储元件可存 1bt&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;地址寄存器 (MAR) 存放访存地址，用于寻址，其位数对应存储单元的个数，如 MAR 有 10 位，则有 2^10=1024 个单元，为 1k&lt;/li&gt;&lt;li&gt;数据寄存器 (MDR) 用于暂存从存储体中读或写的信息，其位数代表存储字长。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;MAR 与 MDR 虽然是存储器的一部分，但在现代 CPU 中是存在于 CPU 中，高速缓存 (Cache) 也存在 CPU 中&lt;/p&gt;&lt;h3 id=&#34;运算器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#运算器&#34;&gt;#&lt;/a&gt; 运算器&lt;/h3&gt;&lt;p&gt;用于实现算术运算 (加减乘除)、逻辑运算 (与或非)。&lt;/p&gt;&lt;p&gt;基本组成&lt;/p&gt;&lt;ol&gt;&lt;li&gt;ACC: 累加器，用来存放操作数，或运算结果&lt;/li&gt;&lt;li&gt;MQ：乘商寄存器，在乘、除运算时，用来存放操作数和运算结果&lt;/li&gt;&lt;li&gt;X：通用的操作数寄存器，用来存放操作数。&lt;/li&gt;&lt;li&gt;ALU：算术逻辑单元，通过内部复杂的电路实现算术运算、逻辑运算。&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;控制器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#控制器&#34;&gt;#&lt;/a&gt; 控制器&lt;/h3&gt;&lt;p&gt;基本组成&lt;/p&gt;&lt;ol&gt;&lt;li&gt;CU：控制单元，分析指令，给出控制信号&lt;/li&gt;&lt;li&gt;IR：指令寄存器，存放当前执行指令&lt;/li&gt;&lt;li&gt;PC：程序计数器，存放下一条指令地址，有自动加 1 功能&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;完成一条指令：取指令 (PC--&amp;gt;IR)---&amp;gt; 分析指令 (CU)----&amp;gt; 执行 (CU)&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CPU 区分指令和数据的依据: &amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt; 指令周期的不同阶段 &amp;lt;/font&amp;gt;&lt;/strong&gt;&lt;/p&gt;&lt;h3 id=&#34;计算机系统的层次结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计算机系统的层次结构&#34;&gt;#&lt;/a&gt; 计算机系统的层次结构&lt;/h3&gt;&lt;p&gt;虚拟机器 M4 (高级机器语言：用编译程序翻译成汇编语言程序)---&amp;gt; 虚拟机器 M3 (汇编语言机器：用汇编程序翻译成机器语言程序)--&amp;gt; 虚拟机器 M2 (操作系统机器：向上提供 &amp;quot;广义指令&amp;quot;(系统调用))---&amp;gt; 传统机器 M1 (用机器语言的机器：执行二进制机器指令)---&amp;gt; 微程序机器 M0 (微指令系统：由硬件直接执行微指令)&lt;/p&gt;&lt;p&gt;M4,M3,M2 属于软件层次，M1,M0 属于硬件层次&lt;/p&gt;&lt;p&gt;计算机系统层次，&lt;strong&gt;&amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt; 下层是上层的基础，上层是下层的扩展 &amp;lt;/font&amp;gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;编译程序：将高级语言编写的源程序&lt;strong&gt;全部语句一次全部翻译成机器语言程序&lt;/strong&gt;，而后再执行机器语言程序 (只需要翻译一次)&lt;br&gt;解释程序：将源程序的一条语句翻译成对于机器语言的语句，并立即执行。紧接着再翻译下一句。(每次执行都要翻译)&lt;/p&gt;&lt;h3 id=&#34;计算机工作的过程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计算机工作的过程&#34;&gt;#&lt;/a&gt; 计算机工作的过程&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;把程序和数据装入主存储器&lt;/li&gt;&lt;li&gt;将源程序换为可执行文件&lt;/li&gt;&lt;li&gt;从可执行文件的首地址开始逐条执行指令&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;什么是存储程序原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#什么是存储程序原理&#34;&gt;#&lt;/a&gt; 什么是存储程序原理&lt;/h3&gt;&lt;p&gt;存储程序是指将指令以代码的形式事先输入计算机主存储器，然后按其在存储器中的首地址执行程序的第一条指令，以后就按该程序的规定顺序执行其他指令，直至程序执行结束。&lt;/p&gt;&lt;h2 id=&#34;13-计算机的主要性能指标&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#13-计算机的主要性能指标&#34;&gt;#&lt;/a&gt; 1.3 计算机的主要性能指标&lt;/h2&gt;&lt;h3 id=&#34;存储器的性能指标&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#存储器的性能指标&#34;&gt;#&lt;/a&gt; 存储器的性能指标&lt;/h3&gt;&lt;p&gt;MAR 位数反应存储单元的个数，MDR 位数 = 存储字长 = 每个存储单元的大小。&lt;br&gt;总容量 = 存储单元个数 x 存储字长 bit = 存储单元个 = 数存储字长 x 存储字长 / 8 Byte&lt;/p&gt;&lt;h3 id=&#34;cpu的性能指标&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cpu的性能指标&#34;&gt;#&lt;/a&gt; CPU 的性能指标&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;CPU 主频: CPU 内数字脉冲信号震荡的频率。每秒内 CPU 数字脉冲信号震荡的次数 (单位：HZ)。CPU 主频 = 1 / CPU 时钟周期。&lt;/li&gt;&lt;li&gt;CPU 时钟周期：每个 CPU 脉冲的时间 (单位：微妙、纳秒)。&lt;/li&gt;&lt;li&gt;CPI：执行一条指令所需要的时钟周期数。&lt;/li&gt;&lt;li&gt;IPS: 每秒执行多少条指令。IPS= 主频 / 平均 CPI&lt;ol&gt;&lt;li&gt;MIPS，即每秒执行百万条指令。&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;FLOPS：每秒执行多少次浮点运算。&lt;ol&gt;&lt;li&gt;MFLOPS&lt;/li&gt;&lt;li&gt;GFLOPS&lt;/li&gt;&lt;li&gt;TFLOPS&lt;br&gt;&amp;lt;font color=&amp;quot;red&amp;quot;&amp;gt;&lt;strong&gt; 执行一条指令的耗时 = CPI * CPU 时钟周期&lt;/strong&gt; &amp;lt;/font&amp;gt;&lt;br&gt;CPU 执行时间 = CPU 时钟周期数 / 主频 = (指令条数 * CPI)/ 主频&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;系统整体性能的指标&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#系统整体性能的指标&#34;&gt;#&lt;/a&gt; 系统整体性能的指标&lt;/h3&gt;&lt;h4 id=&#34;数据通路带宽&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据通路带宽&#34;&gt;#&lt;/a&gt; 数据通路带宽&lt;/h4&gt;&lt;p&gt;数据总线一次所能并行传送信息的位数（各硬件部件通过数据总线传输数据）&lt;/p&gt;&lt;h4 id=&#34;吞吐量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#吞吐量&#34;&gt;#&lt;/a&gt; 吞吐量&lt;/h4&gt;&lt;p&gt;指系统在单位时间内处理请求的数量。&lt;/p&gt;&lt;h4 id=&#34;响应时间&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#响应时间&#34;&gt;#&lt;/a&gt; 响应时间&lt;/h4&gt;&lt;p&gt;指从用户向计算机发送一个请求，该系统对该请求作出响应并获得所需结果的等待时间。&lt;/p&gt;&lt;h4 id=&#34;基准程序跑分软件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基准程序跑分软件&#34;&gt;#&lt;/a&gt; 基准程序 (跑分软件)&lt;/h4&gt;&lt;p&gt;是用来测量计算机处理速度的一种实用程序，以便于被测量的计算机性能可以与运行相同程序的其它计算机性能进行比较。&lt;/p&gt;&lt;h3 id=&#34;机器字长&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#机器字长&#34;&gt;#&lt;/a&gt; 机器字长&lt;/h3&gt;&lt;p&gt;指计算机进行一次整数运算所能处理的二进制数据的位数。机器字长一般等于内部寄存器的大小。&lt;/p&gt;&lt;h2 id=&#34;思考问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#思考问题&#34;&gt;#&lt;/a&gt; 思考问题&lt;/h2&gt;&lt;h3 id=&#34;主频高的cpu一定比主频低的cpu快吗&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#主频高的cpu一定比主频低的cpu快吗&#34;&gt;#&lt;/a&gt; 主频高的 CPU 一定比主频低的 CPU 快吗？&lt;/h3&gt;&lt;p&gt;不一定。还要看 CPI 和指令系统。&lt;/p&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://oreki.world/kaoyan/internet/408%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%89%A9%E7%90%86%E5%B1%82/</guid>
            <title>408计算机网络-物理层</title>
            <link>http://oreki.world/kaoyan/internet/408%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E7%89%A9%E7%90%86%E5%B1%82/</link>
            <category term="考研" scheme="http://oreki.world/categories/kaoyan/" />
            <category term="计算机网络" scheme="http://oreki.world/categories/kaoyan/internet/" />
            <category term="计算机网络" scheme="http://oreki.world/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/" />
            <category term="考研" scheme="http://oreki.world/tags/%E8%80%83%E7%A0%94/" />
            <pubDate>Sun, 28 Mar 2021 19:17:07 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h2 id=&#34;通信基础&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#通信基础&#34;&gt;#&lt;/a&gt; 通信基础&lt;/h2&gt;&lt;h3 id=&#34;基本概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本概念&#34;&gt;#&lt;/a&gt; 基本概念&lt;/h3&gt;&lt;p&gt;物理层解决如何 &amp;lt;font color=Red&amp;gt;&lt;strong&gt; 在各种计算机的传输媒体上传输数据比特流&lt;/strong&gt; &amp;lt;/font&amp;gt;，而不是指 &amp;lt; font color=Red&amp;gt;&lt;strong&gt; 具体的传输媒体&lt;/strong&gt; &amp;lt;/font&amp;gt;。&lt;/p&gt;&lt;p&gt;物理层主要任务：确定与传输媒体接口有关的一些特性 ——&amp;gt; 定义标准&lt;/p&gt;&lt;ol&gt;&lt;li&gt;机械特性。定义物理连接的特性，规定物理连接时采用的规格，接口形状，引线数目，引脚数量和排列情况。&lt;/li&gt;&lt;li&gt;电气特性。规定传输二进制位时，线路上信号的电压范围、阻抗匹配、传输速率和距离限制等。&lt;/li&gt;&lt;li&gt;功能特性。指明某条线上出现的某一电平表示何种意义，接口部件的信号线用途。&lt;/li&gt;&lt;li&gt;规程特性。定义各条物理线路的工作规程和时序关系。&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;数据通信相关术语&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据通信相关术语&#34;&gt;#&lt;/a&gt; 数据通信相关术语&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;数据 data：传送信息的实体，通常是有意义的符号序列。数据通信指在不同计算机之间传输表示信息的二进制数 0、1 序列的过程。&lt;/li&gt;&lt;li&gt;信号：数据的电气 / 电磁的表现，是数据在传输过程中的存在形式。&lt;ol&gt;&lt;li&gt;数字信号 / 离散信号：代表消息的参数的取值是离散的。&lt;/li&gt;&lt;li&gt;模拟信号 / 连续信号：代表消息的参数的取值是连续的。&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;信源：产生和发送数据的源头。&lt;/li&gt;&lt;li&gt;信宿：接受数据的终点。&lt;/li&gt;&lt;li&gt;信道：信号的传输媒介。&lt;ol&gt;&lt;li&gt;按传输信号分：模拟信道 (传送模拟信号) 数字信号 (传送数字信号)&lt;/li&gt;&lt;li&gt;按传输介质分：无线信道 有线信道&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;三种通信方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#三种通信方式&#34;&gt;#&lt;/a&gt; 三种通信方式&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;单工&lt;/li&gt;&lt;li&gt;半双工&lt;/li&gt;&lt;li&gt;全双工&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;数据传输方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据传输方式&#34;&gt;#&lt;/a&gt; 数据传输方式&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;串行传输 -- 将表示一个字符的 8 位二进制数按由低位到高位的顺序依次发送&lt;/li&gt;&lt;li&gt;并行传输 -- 将一个字符的 8 位二进制数同时通过 8 条信道发送&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;同步传输异步传输&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#同步传输异步传输&#34;&gt;#&lt;/a&gt; 同步传输 &amp;amp; 异步传输&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;同步传输 --&amp;gt; 在同步传输的模式下，数据的传送是以一个数据区块为单位，因此同步传输又称为区块传输。在传输数据时，需先送出一个或者多个同步字符，再送出整批的数据。&lt;/li&gt;&lt;li&gt;异步传输&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;码元&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#码元&#34;&gt;#&lt;/a&gt; 码元&lt;/h4&gt;&lt;p&gt;是指用一个固定时长的信号波形（数字脉冲）。是数字信号中数字信号的计量单位。当码元的离散状态由 M 个时，此时码元为 M 进制码元。1 码元可以携带多个比特的信息量。&lt;br&gt;K 进制码元 ---4 进制码元 ——&amp;gt; 码元的离散状态由 4 个 ——&amp;gt;4 种高低不同的信号波形 00、01、10、11&lt;/p&gt;&lt;h4 id=&#34;速率&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#速率&#34;&gt;#&lt;/a&gt; 速率&lt;/h4&gt;&lt;p&gt;也叫数据率，指数据的传输速率。可以用码元传输速率和信息传输速率表示。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;码元传输速率：表示单位时间内数字通信系统所传输的码元个数&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;带宽&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#带宽&#34;&gt;#&lt;/a&gt; 带宽&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;在模拟信号系统中，高频与低频之间的差值就是系统的通频带宽，单位是 HZ&lt;/li&gt;&lt;li&gt;在数字设备中，表示单位时间内从网络的某一点到另一点所能通过的最高数据率 / 单位时间内通过链路的数量，单位是比特每秒&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;两个公式只有在这两个公式这带宽才用hz&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#两个公式只有在这两个公式这带宽才用hz&#34;&gt;#&lt;/a&gt; 两个公式（只有在这两个公式这带宽才用 HZ）&lt;/h3&gt;&lt;h4 id=&#34;失真&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#失真&#34;&gt;#&lt;/a&gt; 失真&lt;/h4&gt;&lt;p&gt;影响失真程度的因素：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;码元传输速率&lt;/li&gt;&lt;li&gt;信号传输距离&lt;/li&gt;&lt;li&gt;噪声干扰&lt;/li&gt;&lt;li&gt;传输媒体质量&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;失真的一种现象 -- 码间串扰 &amp;lt;br&amp;gt;&lt;br&gt;接收端接收到的信号波形失去了码元之间清晰界限的现象&lt;/p&gt;&lt;h4 id=&#34;奈氏准则奈奎斯特定理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#奈氏准则奈奎斯特定理&#34;&gt;#&lt;/a&gt; 奈氏准则（奈奎斯特定理）&lt;/h4&gt;&lt;p&gt;在理想低通（无噪声，带宽受限）条件下，为了避免码间串扰。极限码元传输速率为 2WBaud，W 是信道带宽，单位是 HZ。&amp;lt;br&amp;gt;&lt;br&gt;奈氏准则求极限数据率，理想低通信道下的极限数据传速率 = 2Wlog2V&lt;/p&gt;&lt;p&gt;根据奈氏准则得出结论：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;在任何信道中，码元传输的速率是有上限的。若传输速率超过此上限。就会出现严重的码间串扰问题，是接收端对码元的完全正确识别成为不可能。&lt;/li&gt;&lt;li&gt;信道的频带越宽，就可以用更高的速率进行码元的有效传输&lt;/li&gt;&lt;li&gt;奈氏准则给出了码元传输速率的限制，但并没有对信息传输速率给出限制&lt;/li&gt;&lt;li&gt;由于码元的传输速率受奈氏准则的制约，所以要提高数据的传输速率，就必须设法使每个码元能携带更多个比特的信息量。这就需要采用多元制的调制方法。&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;香农定理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#香农定理&#34;&gt;#&lt;/a&gt; 香农定理&lt;/h4&gt;&lt;p&gt;在带宽受限且有噪声的信道中，为了不产生误差，信息的数据传输速率有上限值。&amp;lt;br&amp;gt;&lt;br&gt;如果题目中给出的信噪比带有单位 dB，则需要先求 S/N：&amp;lt;br&amp;gt;&lt;br&gt;信噪比 (dB) = 10log10 (S/N) &amp;lt;br&amp;gt;&lt;br&gt;信道的极限数据传输速率 = Wlog2 (1+S/N)&amp;lt;br&amp;gt;&lt;/p&gt;&lt;p&gt;根据香农定理得出结论:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;信道的带宽或信道中的信噪比越大，则信息的极限传输速率就越高&lt;/li&gt;&lt;li&gt;对一定的传输带宽和一定的信噪比，信息传输速率的上限就确定了&lt;/li&gt;&lt;li&gt;只要信息的传输速率低于信道的极限传输速率，就一定能找到某种方法来实现无差错的传输&lt;/li&gt;&lt;li&gt;香农定理得出的为极限信息传输速率，实际信道能达到的传输速率要比它低不少&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;数据交换方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#数据交换方式&#34;&gt;#&lt;/a&gt; 数据交换方式&lt;/h3&gt;&lt;h4 id=&#34;电路交换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#电路交换&#34;&gt;#&lt;/a&gt; 电路交换&lt;/h4&gt;&lt;p&gt;电路交换原理：在数据传输期间，源节点与目的节点之间有一条由中间节点构成的专用物理连接线路，在数据传输结束之前，这条线路一直保持 &amp;lt;br&amp;gt;&lt;br&gt;电路交换的阶段：建立连接 (呼叫 / 电路建立) --&amp;gt; 通信 (数据传输) --&amp;gt; 释放连接 (拆除电路)&amp;lt;br&amp;gt;&lt;br&gt;特点：独占资源。适用于远程批处理信息传输或系统间实时性要求高的大量数据传输的情况。&amp;lt;br&amp;gt;&lt;/p&gt;&lt;h4 id=&#34;报文交换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#报文交换&#34;&gt;#&lt;/a&gt; 报文交换&lt;/h4&gt;&lt;p&gt;报文：是网络中交换与传输的数据单元，即站点一次性要送的数据块。&amp;lt;br&amp;gt;&lt;br&gt;报文交换的原理：无需在两个站点之间建立一条专用通路，其数据传输的单位是报文，传送过程采用存储转发的方式。&amp;lt;br&amp;gt;&lt;/p&gt;&lt;h4 id=&#34;分组交换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分组交换&#34;&gt;#&lt;/a&gt; 分组交换&lt;/h4&gt;&lt;p&gt;分组：大多数计算机网络都不能连续地传送任意长的数据，所以实际上网络系统把数据分割成小块，然后逐块地发送，这种小块称作分组 (packet)&amp;lt;br&amp;gt;&lt;br&gt;分组交换原理：分组交换与报文交换工作方式相同，都采用存储转发。形式上差别，分组交换网中要限制所传输的数据单位的长度，一般选 128B。&amp;lt;br&amp;gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;数据报方式&lt;ol&gt;&lt;li&gt;数据报方式为网络层提供无连接服务。发送方可随时发送分组，网络中的节点可随时接收分组。(无连接服务：不事先为分组的传输确定传输路径，每个分组独立确定传输路径)&lt;/li&gt;&lt;li&gt;同一报文的不同分组达到目的结点时可能发生乱序、重复与丢失。&lt;/li&gt;&lt;li&gt;每个分组在传输过程中都必须携带源地址和目的地址，以及分组号&lt;/li&gt;&lt;li&gt;分组在交换结点存储转发时，需要排队等候处理，这会带来一定的时延。当通过交换结点的通信量较大或网络发送拥塞时，这种时延会大大增加，交换结点还可能根绝情况丢弃部分分组。&lt;/li&gt;&lt;li&gt;网络具有冗余路径，当某一交换结点或一段链路出现故障时，可相应地更新转发表，寻找另一条路径转发分组，对故障的适应能力强，适用于突发性通信，不适于长报文，会话式通信。&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;虚电路方式&lt;br&gt;虚电路将数据报方式和电路交换方式结合。&lt;br&gt;一条源主机到目的主机类似于电路的路径 (逻辑连接)，路径上所有结点都要维持这条虚电路的建立，都维持一张虚电路表。&lt;ol&gt;&lt;li&gt;虚电路方式为网络层提供连接服务。源节点和目的结点之间建立一条逻辑连接，而非实际物理连接。(连接服务：首先为分组的传输确定传输路径，然后沿该路径传输系列分组，传输结束后拆除连接)&lt;/li&gt;&lt;li&gt;一次通信的所有分组都通过虚电路顺序传送，分组不需要携带源地址&lt;br&gt;目的地址等信息，同一报文的不同分组到达目的结点时不会乱序、重复和丢失。&lt;/li&gt;&lt;li&gt;分组通过虚电路上的每个节点时，节点只进行差错检测，不需要路由选择。&lt;/li&gt;&lt;li&gt;每个节点可能与多个节点之间建立虚电路，每条虚电路支持特定两个端系统间的数据传输，可以对两个数据端点的流量进行控制。两个端系统之间也可以有多条虚电路为不同的进程服务。&lt;/li&gt;&lt;li&gt;致命弱点：当网络中的某个节点或者某条链路出故障而彻底失效时，则所有经过该节点或者该链路的虚电路将遭到破坏&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2 id=&#34;编码与调制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#编码与调制&#34;&gt;#&lt;/a&gt; 编码与调制&lt;/h2&gt;&lt;ol&gt;&lt;li&gt;基带信号 --&amp;gt; 将数字信号 1 和 0 直接用两种不同的电压表示，再送到数字信道上去传输 (基带传输)&lt;/li&gt;&lt;li&gt;宽带信号 --&amp;gt; 将基带信号进行调制后形成的频分复用模拟信号，再传送到模拟信道上去传输 (宽带传输)&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;再传输距离较近时，计算机网络采用基带传输方式。在距离较远时，计算机网络采用宽带传输方式。&lt;/p&gt;&lt;p&gt;数字数据 --（数字发送器）-&amp;gt; 数字信号 编码 &amp;lt;br&amp;gt;&lt;br&gt;数字数据 --（调制器）-&amp;gt; 模拟信号 调制 &amp;lt;br&amp;gt;&lt;/p&gt;&lt;p&gt;模拟数据 --（PCM 编码器）-&amp;gt; 数字信号 编码 &amp;lt;br&amp;gt;&lt;br&gt;模拟数据 --（放大器调制器）-&amp;gt; 模拟信号 调制 &amp;lt;br&amp;gt;&lt;/p&gt;&lt;p&gt;数字数据编码为数字信号&lt;/p&gt;&lt;ol&gt;&lt;li&gt;非归零编码 (NRZ)&lt;/li&gt;&lt;li&gt;曼彻斯特编码 --&amp;gt; 一个码元中信号变化 2 次&lt;/li&gt;&lt;li&gt;差分曼彻斯特编码&lt;/li&gt;&lt;li&gt;归零编码 (RZ)&lt;/li&gt;&lt;li&gt;反向不归零编码 (NRZI)&lt;/li&gt;&lt;li&gt;4B/5B 编码&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;数字数据调制为模拟信号&lt;/p&gt;&lt;p&gt;模拟数据编码为数字信号&lt;/p&gt;&lt;h2 id=&#34;传输介质设备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#传输介质设备&#34;&gt;#&lt;/a&gt; 传输介质 &amp;amp; 设备&lt;/h2&gt;&lt;h3 id=&#34;传输介质&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#传输介质&#34;&gt;#&lt;/a&gt; 传输介质&lt;/h3&gt;&lt;h4 id=&#34;导向传输介质&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#导向传输介质&#34;&gt;#&lt;/a&gt; 导向传输介质&lt;/h4&gt;&lt;p&gt;电磁被导向沿着固体媒介 (铜线 / 光纤) 传播。&amp;lt;br&amp;gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;双绞线。最古老，最常用的传输介质，由两根采用一定规则并排绞合的、相互绝缘的铜导线组成。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;屏蔽双绞线 (STP)&lt;/li&gt;&lt;li&gt;非屏蔽双绞线 (UTP)&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;同轴电缆&lt;/p&gt;&lt;ol&gt;&lt;li&gt;基带同轴电缆，传送基带数字信号&lt;/li&gt;&lt;li&gt;宽带同轴电缆，传送宽带信号&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;光纤&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;多模光纤&lt;br&gt;定义：有多种传输光信号模式的光纤&lt;br&gt;光源：发光二极管&lt;br&gt;易失真，适合近距离传输&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;单模光纤&lt;br&gt;定义：一种在横向模式直接传输光信号的光纤&lt;br&gt;光源：定向性很好的激光二极管&lt;br&gt;特点：衰耗小，适合远距离传输&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;光纤的特点：&amp;lt;br&amp;gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;传输损耗小&lt;/li&gt;&lt;li&gt;抗雷电和电磁干扰性能好&lt;/li&gt;&lt;li&gt;保密性好，不易被窃听和截取数据&lt;/li&gt;&lt;li&gt;体积小、重量轻&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;非导向传输介质&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#非导向传输介质&#34;&gt;#&lt;/a&gt; 非导向传输介质&lt;/h4&gt;&lt;p&gt;自由空间，介质可以是空气、真空、海水等。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;无线电波：信号向所有方向传播。较强穿透能力，可传远距离，广泛用于通信领域。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;微波：信号固定方向传播。微波通信频率较高、频段范围宽，因此数据率很高。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;地面微波接力通信&lt;/li&gt;&lt;li&gt;卫星通信&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;红外线、激光：信号固定方向传播。把要传输的信号分别转换为各自的信号格式，即红外光信号和激光信号，再在空气中传播。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;物理层设备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#物理层设备&#34;&gt;#&lt;/a&gt; 物理层设备&lt;/h3&gt;&lt;h4 id=&#34;中继器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#中继器&#34;&gt;#&lt;/a&gt; 中继器&lt;/h4&gt;&lt;p&gt;诞生原因：由于存在损耗，在线路上传输的信号功率会逐渐衰减，衰减到一定程度失真，因此会导致接收错误。&amp;lt;br&amp;gt;&lt;br&gt;中继器的功能：对信号进行再生和还原，对衰减的信号进行放大，保持与原数据相同，以增加信号传输的距离，延长网络的长度。&amp;lt;br&amp;gt;&lt;br&gt;中继器的两端：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;两端的网络部分是网段，而不是子网，适用于完全相同的两类网络互连。&lt;/li&gt;&lt;li&gt;两端可连接相同媒体，也可以连接不同媒体。&lt;/li&gt;&lt;li&gt;中继器两端的网段一定要是同一个协议，中继器不会存储转发。&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;集线器多口中继器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#集线器多口中继器&#34;&gt;#&lt;/a&gt; 集线器 (多口中继器)&lt;/h4&gt;&lt;p&gt;集线器的功能：对信号进行再生放大转发，对衰减信号放大，接着转发到其他所有处于工作状态的端口上，以增加信号传输的距离，延长网络的长度。不具备信号的定向传送能力，是一个共享式设备。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;集线器不能分割冲突域&lt;/li&gt;&lt;li&gt;连在集线器上的工作主机平分带宽&lt;/li&gt;&lt;/ol&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://oreki.world/kaoyan/internet/408%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB/</guid>
            <title>408计算机网络-计算机网络体系</title>
            <link>http://oreki.world/kaoyan/internet/408%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB/</link>
            <category term="考研" scheme="http://oreki.world/categories/kaoyan/" />
            <category term="计算机网络" scheme="http://oreki.world/categories/kaoyan/internet/" />
            <category term="计算机网络" scheme="http://oreki.world/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/" />
            <category term="考研" scheme="http://oreki.world/tags/%E8%80%83%E7%A0%94/" />
            <pubDate>Sun, 28 Mar 2021 19:16:54 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h3 id=&#34;计算机网络&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计算机网络&#34;&gt;#&lt;/a&gt; 计算机网络&lt;/h3&gt;&lt;p&gt;是一个将分散的、具有独立功能的计算机系统，通过通信设备和线路连接起来，由功能完善的软件实现资源共享和信息传递的系统。&lt;/p&gt;&lt;p&gt;计算机网络是互连得、自治的计算机集合&lt;/p&gt;&lt;ol&gt;&lt;li&gt;互连 - 通过通信链路互联互通&lt;/li&gt;&lt;li&gt;自治 - 无主从关系&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;计算机网络的功能&lt;/p&gt;&lt;ol&gt;&lt;li&gt;数据通信&lt;/li&gt;&lt;li&gt;资源共享&lt;/li&gt;&lt;li&gt;分布式处理&lt;/li&gt;&lt;li&gt;提高可靠性&lt;/li&gt;&lt;li&gt;负载均衡&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;计算机网络的发展&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计算机网络的发展&#34;&gt;#&lt;/a&gt; 计算机网络的发展&lt;/h3&gt;&lt;h4 id=&#34;第一阶段&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第一阶段&#34;&gt;#&lt;/a&gt; 第一阶段&lt;/h4&gt;&lt;p&gt;ARPAnet 阿帕网 --&amp;gt; internet (interconnected netword) 互联网 --&amp;gt; Internet 因特网&lt;/p&gt;&lt;ol&gt;&lt;li&gt;网络把许多的计算机连接在一起&lt;/li&gt;&lt;li&gt;互联网把许多的网络连接在一起&lt;/li&gt;&lt;li&gt;因特网是世界上最大的互联网&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;第二阶段-三级结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二阶段-三级结构&#34;&gt;#&lt;/a&gt; 第二阶段 - 三级结构&lt;/h4&gt;&lt;h4 id=&#34;第三阶段-多层次isp结构&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第三阶段-多层次isp结构&#34;&gt;#&lt;/a&gt; 第三阶段 - 多层次 ISP 结构&lt;/h4&gt;&lt;h3 id=&#34;计算机网络的组成&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计算机网络的组成&#34;&gt;#&lt;/a&gt; 计算机网络的组成&lt;/h3&gt;&lt;p&gt;组成部分：硬件、软件、协议（一系列规则和约定的集合）&lt;/p&gt;&lt;p&gt;工作方式&lt;/p&gt;&lt;ol&gt;&lt;li&gt;边缘部分&lt;/li&gt;&lt;li&gt;核心部分&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;功能组成&lt;br&gt;数据通信和资源共享&lt;/p&gt;&lt;ol&gt;&lt;li&gt;通信子网：实现数据通信&lt;/li&gt;&lt;li&gt;资源子网：实现资源共享 / 数据处理&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;计算机网络的分类&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计算机网络的分类&#34;&gt;#&lt;/a&gt; 计算机网络的分类&lt;/h3&gt;&lt;p&gt;按范围分布&lt;/p&gt;&lt;ol&gt;&lt;li&gt;广域网 WAN--&amp;gt; 交换技术&lt;/li&gt;&lt;li&gt;城域网 MAN&lt;/li&gt;&lt;li&gt;局域网 LAN--&amp;gt; 广播技术&lt;/li&gt;&lt;li&gt;个人区域网 PAN&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;按使用者分&lt;/p&gt;&lt;ol&gt;&lt;li&gt;公用网&lt;/li&gt;&lt;li&gt;专用网&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;按交换技术分&lt;/p&gt;&lt;ol&gt;&lt;li&gt;电路交换&lt;/li&gt;&lt;li&gt;报文交换&lt;/li&gt;&lt;li&gt;分组交换&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;按拓扑结构分&lt;/p&gt;&lt;ol&gt;&lt;li&gt;总线型&lt;/li&gt;&lt;li&gt;星型&lt;/li&gt;&lt;li&gt;环型&lt;/li&gt;&lt;li&gt;网状型 -- 常用于广域网&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;按传输技术分&lt;/p&gt;&lt;ol&gt;&lt;li&gt;广播式网络 -- 共享公共通信信道&lt;/li&gt;&lt;li&gt;点对点网络 -- 使用分组存储转发和路由选择机制&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;计算机网络的标准化工作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计算机网络的标准化工作&#34;&gt;#&lt;/a&gt; 计算机网络的标准化工作&lt;/h3&gt;&lt;p&gt;标准的分类&lt;/p&gt;&lt;ol&gt;&lt;li&gt;法定标准：osi&lt;/li&gt;&lt;li&gt;事实标准: tcp/ip&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;标准化工作的相关组织&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#标准化工作的相关组织&#34;&gt;#&lt;/a&gt; 标准化工作的相关组织&lt;/h3&gt;&lt;p&gt;国际标准化组织 ISO-- 制定了 OSI 参考模型、HDLC 协议&lt;br&gt;国际电信联盟 ITU-- 制定通信规则&lt;br&gt;国际电气电子工程师协会 IEEE-- 学术机构、IEEE802 系列标准、5G&lt;br&gt;internet 工程任务组 IETF-- 负责因特网相关标准的制定&lt;/p&gt;&lt;h3 id=&#34;计算机网络性能指标&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#计算机网络性能指标&#34;&gt;#&lt;/a&gt; 计算机网络性能指标&lt;/h3&gt;&lt;h4 id=&#34;速率&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#速率&#34;&gt;#&lt;/a&gt; 速率&lt;/h4&gt;&lt;p&gt;即数据率或者称数据传输率或比特率&lt;/p&gt;&lt;h4 id=&#34;比特&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#比特&#34;&gt;#&lt;/a&gt; 比特&lt;/h4&gt;&lt;p&gt;表现形式：1/0 单位：位&lt;/p&gt;&lt;p&gt;连接在计算机网络上的主机在数字信道上传送数据位数的速率单位是 b/s, kb/s, Mb/s, Gb/s, Tb/s&lt;/p&gt;&lt;h4 id=&#34;存储容量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#存储容量&#34;&gt;#&lt;/a&gt; 存储容量&lt;/h4&gt;&lt;p&gt;1Byte (字节)=8bit (比特)&lt;/p&gt;&lt;h4 id=&#34;带宽&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#带宽&#34;&gt;#&lt;/a&gt; 带宽&lt;/h4&gt;&lt;p&gt;计算机网络中，带宽用来表示网络的通信线路传送数据的能力，通常是指单位时间内从网络中的某一点到另一点所能通过的 “最高数据率”。单位是 b/s, kb/s, Mb/s, Gb/s, Tb/s&lt;/p&gt;&lt;h4 id=&#34;吞吐量&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#吞吐量&#34;&gt;#&lt;/a&gt; 吞吐量&lt;/h4&gt;&lt;p&gt;表示在单位时间内通过某个网络 (或信道、接口) 的数据量。单位是 b/s, kb/s, Mb/s 等&lt;br&gt;吞吐量受网络的带宽限制&lt;/p&gt;&lt;h4 id=&#34;时延&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#时延&#34;&gt;#&lt;/a&gt; 时延&lt;/h4&gt;&lt;p&gt;指数据从网络的一端传送到另一端所需的时间。也叫延迟，单位是 s&lt;/p&gt;&lt;ol&gt;&lt;li&gt;发送时延：从发送分组的第一个比特算起，到该分组的最后一个比特发送完毕所需的时间。发送时延 = 数据长度 / 信道带宽&lt;/li&gt;&lt;li&gt;传播时延：取决于电磁波传播速度和链路长度。传播时延 = 信道长度 / 电磁波在信道上的传播速率&lt;/li&gt;&lt;li&gt;排队时延&lt;/li&gt;&lt;li&gt;处理时延&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;时延带宽积&lt;br&gt;时延带宽积 = 传播时延 * 带宽&lt;br&gt;以比特位单位的链路长度，即 “某段链路现在有多少比特”&lt;/p&gt;&lt;h4 id=&#34;往返使用rtt&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#往返使用rtt&#34;&gt;#&lt;/a&gt; 往返使用 RTT&lt;/h4&gt;&lt;p&gt;从发送方发送数据开始，到发送方收到接收方的确认，总共经历的时延。&lt;br&gt;RTT 越大，在收到确认之前，可以发送的数据越多。&amp;lt;br&amp;gt;&lt;br&gt;RTT 包括&lt;/p&gt;&lt;ol&gt;&lt;li&gt;往返传播时延 = 传播时延 * 2&lt;/li&gt;&lt;li&gt;末端处理时间&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;利用率&lt;/p&gt;&lt;ol&gt;&lt;li&gt;信道利用率：有数据通过的时间 /（有 + 无）数据通过时间&lt;/li&gt;&lt;li&gt;网络利用率：信道利用率加权平均值&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;综合概念&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#综合概念&#34;&gt;#&lt;/a&gt; 综合概念&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;网络体系结构是从功能上描述计算机网络结构 &amp;lt;br&amp;gt;&lt;/li&gt;&lt;li&gt;计算机网络体系结构简称网络体系结构是分层结构 &amp;lt;br&amp;gt;&lt;/li&gt;&lt;li&gt;每层遵循某个网络以完成本层功能 &amp;lt;br&amp;gt;&lt;/li&gt;&lt;li&gt;计算机网络体系结构是计算机网络的各层及其协议的集合 &amp;lt;br&amp;gt;&lt;/li&gt;&lt;li&gt;第 N 层在向 N+1 层提供服务时，此服务不仅包含第 N 层本身的功能，还包含由下层服务提供的功能 &amp;lt;br&amp;gt;&lt;/li&gt;&lt;li&gt;仅仅在相邻层有接口，且所提供的服务的具体实现细节对上一层完全屏蔽 &amp;lt;br&amp;gt;&lt;/li&gt;&lt;li&gt;体系结构是抽象的，而实现是指能运行的一些软件和硬件 &amp;lt;br&amp;gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;协议与服务有何区别？&lt;/p&gt;&lt;ol&gt;&lt;li&gt;协议是水平的，即协议是控制两个对等实体之间通信的规则。服务是垂直的。即服务室由下层通过层间接口向上层提供。&lt;/li&gt;&lt;li&gt;&lt;/li&gt;&lt;/ol&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://oreki.world/interview/%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B%E5%8D%8F%E7%A8%8B/</guid>
            <title>进程线程协程</title>
            <link>http://oreki.world/interview/%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B%E5%8D%8F%E7%A8%8B/</link>
            <category term="面试" scheme="http://oreki.world/categories/interview/" />
            <category term="操作系统" scheme="http://oreki.world/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/" />
            <pubDate>Sat, 24 Oct 2020 16:54:17 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h3 id=&#34;进程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#进程&#34;&gt;#&lt;/a&gt; 进程&lt;/h3&gt;&lt;p&gt;操作系统提供的抽象概念，是系统进行资源分配和调度的基本单位。也可以说是实体，程序的实体。程序本身是没有生命周期的，它只是存在磁盘上的一些指令，程序一旦运行就是进程。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;每一个进程都有自己的地址空间，一般情况下，包括文本区域、数据区域和堆栈。文本区域存储代码、数据区域分配内存、堆栈区域存储调用的指令和本地变量。&lt;/li&gt;&lt;li&gt;进程是一个 “执行中的程序”。&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;线程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#线程&#34;&gt;#&lt;/a&gt; 线程&lt;/h3&gt;&lt;p&gt;轻量级进程，是程序执行流的最小单元。是程序的实际执行者。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;线程自己不拥有系统资源，只拥有一点儿在运行中必不可少的资源，但它可与同属一个进程的其它线程共享进程所拥有的全部资源。&lt;/li&gt;&lt;li&gt;一个进程里面有多个线程&lt;/li&gt;&lt;li&gt;每一个程序都至少有一个线程，若程序只有一个线程，那就是程序本身。&lt;/li&gt;&lt;li&gt;线程拥有自己的栈空间。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;线程也有就绪、阻塞和运行三种基本状态。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;就绪状态是指线程具备运行的所有条件，逻辑上可以运行，在等待处理机；&lt;/li&gt;&lt;li&gt;运行状态是指线程占有处理机正在运行；&lt;/li&gt;&lt;li&gt;阻塞状态是指线程在等待一个事件（如某个信号量），逻辑上不可执行。&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;协程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#协程&#34;&gt;#&lt;/a&gt; 协程&lt;/h3&gt;&lt;p&gt;需要讲回线程&lt;br&gt;线程有两种类型&lt;/p&gt;&lt;ol&gt;&lt;li&gt;一种是由内核来管理和调度。&lt;/li&gt;&lt;li&gt;另外一种线程，他的调度是由程序员自己写程序来管理的，对内核来说不可见。这种线程叫做『用户空间线程』。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;协程可以理解就是一种用户空间线程。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;协同，因为是由程序员自己写的调度策略，其通过协作而不是抢占来进行切换&lt;/li&gt;&lt;li&gt;在用户态完成创建，切换和销毁&lt;/li&gt;&lt;/ol&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://oreki.world/PyQt%E7%9A%84Led%E6%8E%A7%E4%BB%B6%E6%98%BE%E7%A4%BA%E5%BA%93/</guid>
            <title>PyQt的Led控件显示库</title>
            <link>http://oreki.world/PyQt%E7%9A%84Led%E6%8E%A7%E4%BB%B6%E6%98%BE%E7%A4%BA%E5%BA%93/</link>
            <category term="Python" scheme="http://oreki.world/categories/python/" />
            <category term="Pyqt5" scheme="http://oreki.world/categories/python/Pyqt5/" />
            <category term="Python" scheme="http://oreki.world/tags/Python/" />
            <pubDate>Fri, 16 Oct 2020 14:30:09 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h3 id=&#34;控件说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#控件说明&#34;&gt;#&lt;/a&gt; 控件说明&lt;/h3&gt;&lt;p&gt;在 Github 上，偶然发现了一个基于 PyQt5 的第三方 Led 指示灯控件库，使用起来非常方便，控件外观也比较漂亮，更难能可贵的是作者源代码写得比较简洁，仅仅才约 200 行左右，可以作为一个在 PyQt 中写自定义控件方法的非常好的学习例子。这个控件具有以下特点：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;提供了 3 种外形可供选择，分别为：&#39;capsule&#39;, &#39;circle&#39;, &#39;rectangle&#39; 等&lt;/li&gt;&lt;li&gt;提供了 7 种颜色可供选择，分别为：&#39;blue&#39;, &#39;green&#39;, &#39;orange&#39;, &#39;purple&#39;, &#39;red&#39;, &#39;yellow&#39; 等&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;安装使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装使用&#34;&gt;#&lt;/a&gt; 安装使用&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;pip install pyqt-led
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在代码中使用时，只需使用以下语句导入该库的 LED 类即可：&lt;/p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; pyqt_led &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; led&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在该库中，提供了几个主要的方法函数，包括 set_on_color、set_off_color、set_shape、turn_on、turn_off 等函数，分别设置 Led 的开 / 关颜色、形状及设置开、关状态等。&lt;/p&gt;&lt;h3 id=&#34;使用案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用案例&#34;&gt;#&lt;/a&gt; 使用案例&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-pythonython&#34;&gt;import sys
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from PyQt5.QtCore import *
import numpy as np
from pyqt_led import Led

class Demo(QWidget):
    def __init__(self, parent=None):
        QWidget.__init__(self, parent)
        self._shape = np.array([&#39;capsule&#39;, &#39;circle&#39;, &#39;rectangle&#39;])
        self._color = np.array([&#39;blue&#39;, &#39;green&#39;, &#39;orange&#39;, &#39;purple&#39;, &#39;red&#39;,
                                &#39;yellow&#39;])
        self._layout = QGridLayout(self)
        self._create_leds()
        self._arrange_leds()
        self.resize(400, 200)
        self.setWindowTitle(&#39;pyqt-led Demo&#39;)

    def keyPressEvent(self, e):
        if e.key() == Qt.Key_Escape:
            self.close()

    def _create_leds(self):
        for s in self._shape:
            for c in self._color:
                exec(&#39;self._{}_{} = Led(self, on_color=Led.{}, shape=Led.{}, build=&amp;quot;debug&amp;quot;)&#39;
                     .format(s, c, c, s))
                exec(&#39;self._{}_{}.setFocusPolicy(Qt.NoFocus)&#39;.format(s, c))
                exec(&#39;self._{}_{}.turn_on(True)&#39;.format(s, c))

    def _arrange_leds(self):
        for r in range(3):
            for c in range(6):
                exec(&#39;self._layout.addWidget(self._{}_{}, {}, {}, 1, 1, \
                      Qt.AlignCenter)&#39;
                     .format(self._shape[r], self._color[c], r, c))

app = QApplication(sys.argv)
demo = Demo()
demo.show()
sys.exit(app.exec_())
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;运行这个程序后，即可出现本文开头所示的在一个窗口上显示了不同形状、不同颜色的 Led 的窗口。默认运行时显示的为全亮状态，当设置为全灭状态时，如下图所示：&lt;/p&gt;&lt;p&gt;在代码中，Led 类实例化时，其构造函数原型如下所示：&lt;/p&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Led&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;parent&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; on_color&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;green&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; off_color&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;black&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; shape&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;rectangle&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; build&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;release&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;可传入父窗口、初始的亮颜色、灭颜色、形状及状态参数。&lt;/p&gt;&lt;p&gt;对于需要在程序开发中使用指示灯的情况，如显示各种程序的运行状态等，应该说这是一个比较实用的库了。当然，由于源代码比较简单，你也可以在其基础上进一步修改订制，比如添加其它形状、颜色等选项设置，以满足自己的项目使用要求。&lt;/p&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://oreki.world/pyqt5%E5%BC%B9%E5%87%BA%E7%AA%97%E5%8F%A3%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B%E5%A4%A7%E5%85%A8/</guid>
            <title>pyqt5弹出窗口代码实例大全</title>
            <link>http://oreki.world/pyqt5%E5%BC%B9%E5%87%BA%E7%AA%97%E5%8F%A3%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B%E5%A4%A7%E5%85%A8/</link>
            <category term="Python" scheme="http://oreki.world/categories/python/" />
            <category term="Pyqt5" scheme="http://oreki.world/categories/python/Pyqt5/" />
            <category term="Python" scheme="http://oreki.world/tags/Python/" />
            <pubDate>Thu, 15 Oct 2020 15:58:05 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h3 id=&#34;pyqt5弹出窗口代码大全&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#pyqt5弹出窗口代码大全&#34;&gt;#&lt;/a&gt; PyQT5 弹出窗口代码大全&lt;/h3&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; PyQt5&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;QtWidgets &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; PyQt5&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;QtCore &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Qt&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; pyqtSignal&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; QTimer&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyWindow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;QWidget&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token builtin&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__init__&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setWindowTitle&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;PyQt5 弹出窗口（框）大全&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;resize&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;300&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;# 全局布局（注意参数 self）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        wl &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QVBoxLayout&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;# 局部布局&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        h1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QHBoxLayout&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输入框&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        h2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QHBoxLayout&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 消息窗口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        h3 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QHBoxLayout&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 文件（夹）打开，保存&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        h4 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QHBoxLayout&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 颜色、字体、自定义&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn11 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;输入：整数&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn12 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;输入：小数&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn13 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;输入：文本&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn14 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;输入：多文&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn15 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;输入：选项&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn21 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;消息：信息&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn22 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;消息：问答&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn23 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;消息：警告&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn24 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;消息：危险&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn25 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;消息：关于&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn31 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;文件：文件夹&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn32 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;文件：单文件&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn33 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;文件：多文件&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn34 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;文件：保存&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn35 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;文件：另存为&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn41 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;颜色&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn42 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;字体&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn43 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;自定义&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; btn &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn11&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; btn12&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; btn13&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; btn14&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; btn15&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            h1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;addWidget&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; btn &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn21&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; btn22&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; btn23&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; btn24&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; btn25&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            h2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;addWidget&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; btn &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn31&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; btn32&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; btn33&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; btn34&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; btn35&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            h3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;addWidget&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; btn &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn41&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; btn42&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; btn43&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            h4&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;addWidget&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn11&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;do_btn11&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输入：整数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn12&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;do_btn12&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输入：小数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn13&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;do_btn13&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输入：文本&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn14&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;do_btn14&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输入：多文&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn15&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;do_btn15&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输入：选项&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn21&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;do_btn21&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 消息：信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn22&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;do_btn22&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 消息：问答&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn23&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;do_btn23&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 消息：警告&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn24&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;do_btn24&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 消息：危险&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn25&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;do_btn25&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 消息：关于&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn31&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;do_btn31&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 文件：文件夹&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn32&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;do_btn32&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 文件：单文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn33&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;do_btn33&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 文件：多文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn34&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;do_btn34&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 文件：保存&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn35&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;do_btn35&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 文件：另存为&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn41&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;do_btn41&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 颜色&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn42&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;do_btn42&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 字体&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn43&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;do_btn43&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 自定义&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;# 加到全局布局&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        wl&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;addLayout&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;h1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        wl&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;addLayout&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;h2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        wl&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;addLayout&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;h3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        wl&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;addLayout&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;h4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;window2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; MyWindow2&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 自定义窗口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;window2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;before_close_signal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 接收自定义窗口关闭时发送过来的信号，交给 echo 函数显示&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;88&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;echo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;89&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;显示对话框返回值&#39;&#39;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;90&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;information&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;返回值&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;得到：&amp;#123;&amp;#125;\n\ntype: &amp;#123;&amp;#125;&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;91&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Yes &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;No&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;92&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;# pass&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;93&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;94&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# =====================================================================&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;95&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;do_btn11&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输入：整数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;96&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;# 后面四个数字的作用依次是 初始值 最小值 最大值 步幅&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;97&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        value&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ok &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QInputDialog&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getInt&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;输入框标题&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;这是提示信息\n\n请输入整数:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;37&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;98&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;# self.echo(value)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;99&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;100&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;do_btn12&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输入：小数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;101&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;# 后面四个数字的作用依次是 初始值 最小值 最大值 小数点后位数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;102&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        value&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ok &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QInputDialog&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getDouble&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;输入框标题&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;这是提示信息\n\n请输入整数:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;37.56&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;103&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;104&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;105&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;do_btn13&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输入：文本&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;106&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;# 第三个参数表示显示类型，可选，有正常（QLineEdit.Normal）、密碼（ QLineEdit. Password）、不显示（ QLineEdit. NoEcho）三种情况&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;107&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        value&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ok &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QInputDialog&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getText&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;输入框标题&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;这是提示信息\n\n请输入文本:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; QLineEdit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Normal&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;这是默认值&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;108&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;109&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;110&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;do_btn14&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输入：多文&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;111&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        value&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ok &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QInputDialog&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getMultiLineText&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;输入框标题&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;这是提示信息\n\n请输入地址:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;默认的\n我的地址是\n中国广东广州番禺&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;112&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;113&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;114&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;do_btn15&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 输入：选项&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;115&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token comment&#34;&gt;# 1 为默认选中选项目，True/False  列表框是否可编辑。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;116&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        items &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;Spring&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Summer&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Fall&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Winter&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;117&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        value&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ok &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QInputDialog&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getItem&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;输入框标题&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;这是提示信息\n\n请选择季节:&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; items&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;118&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;119&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;120&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# =====================================================================&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;121&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;do_btn21&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 消息：信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;122&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        reply &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;information&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;123&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                        &lt;span class=&#34;token string&#34;&gt;&#34;消息框标题&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;124&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                        &lt;span class=&#34;token string&#34;&gt;&#34;这是一条消息。&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;125&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                        QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Yes &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;No&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;126&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;reply&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;127&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;128&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;do_btn22&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 消息：问答&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;129&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        reply &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;question&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;130&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                     &lt;span class=&#34;token string&#34;&gt;&#34;消息框标题&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;131&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                     &lt;span class=&#34;token string&#34;&gt;&#34;这是一条问答吗？&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;132&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                     QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Yes &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;No&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;133&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;reply&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;134&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;135&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;do_btn23&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 消息：警告&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;136&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        reply &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;warning&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;137&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                    &lt;span class=&#34;token string&#34;&gt;&#34;消息框标题&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;138&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                    &lt;span class=&#34;token string&#34;&gt;&#34;这是一条警告！&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;139&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                    QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Yes &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;No&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;140&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;reply&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;141&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;142&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;do_btn24&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 消息：危险&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;143&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        reply &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ctitical&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;144&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                     &lt;span class=&#34;token string&#34;&gt;&#34;消息框标题&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;145&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                     &lt;span class=&#34;token string&#34;&gt;&#34;危险！程序即将强制退出！！！\n\n这个按钮再也点不开。&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;146&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                     QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Yes &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;No&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;147&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;reply&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;148&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;149&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;do_btn25&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 消息：关于&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;150&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        reply &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;about&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;151&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                  &lt;span class=&#34;token string&#34;&gt;&#34;消息框标题&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;152&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                  &lt;span class=&#34;token string&#34;&gt;&#34;这是关于软件的说明。。。&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;153&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                  QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Yes &lt;span class=&#34;token operator&#34;&gt;|&lt;/span&gt; QMessageBox&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;No&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;154&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;reply&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;155&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;156&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# =====================================================================&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;157&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;do_btn31&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 文件：文件夹&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;158&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token builtin&#34;&gt;dir&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QFileDialog&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getExistingDirectory&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;159&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                               &lt;span class=&#34;token string&#34;&gt;&#34;选取文件夹&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;160&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                               &lt;span class=&#34;token string&#34;&gt;&#34;C:/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 起始路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;161&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;dir&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;162&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;163&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;do_btn32&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 文件：单文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;164&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        file_&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; filetype &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QFileDialog&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getOpenFileName&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;165&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                      &lt;span class=&#34;token string&#34;&gt;&#34;选取文件&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;166&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                      &lt;span class=&#34;token string&#34;&gt;&#34;C:/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;167&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                      &lt;span class=&#34;token string&#34;&gt;&#34;All Files (*);;Text Files (*.txt)&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 设置文件扩展名过滤，注意用双分号间隔&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;168&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;file_&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;169&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;170&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;do_btn33&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 文件：多文件&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;171&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        files&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ok &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QFileDialog&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getOpenFileNames&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;172&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                 &lt;span class=&#34;token string&#34;&gt;&#34;多文件选择&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;173&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                 &lt;span class=&#34;token string&#34;&gt;&#34;C:/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;174&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                 &lt;span class=&#34;token string&#34;&gt;&#34;All Files (*);;Text Files (*.txt)&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;175&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;files&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;176&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;177&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;do_btn34&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 文件：保存&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;178&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        file_&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ok &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QFileDialog&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getSaveFileName&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;179&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                &lt;span class=&#34;token string&#34;&gt;&#34;文件保存&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;180&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                &lt;span class=&#34;token string&#34;&gt;&#34;C:/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;181&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                &lt;span class=&#34;token string&#34;&gt;&#34;All Files (*);;Text Files (*.txt)&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;182&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;file_&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;183&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;184&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;do_btn35&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 文件：另存为&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;185&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        file_&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ok &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QFileDialog&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getSaveFileName&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;186&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                &lt;span class=&#34;token string&#34;&gt;&#34;文件另存为&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;187&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                &lt;span class=&#34;token string&#34;&gt;&#34;C:/&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;188&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                                &lt;span class=&#34;token string&#34;&gt;&#34;All Files (*);;Text Files (*.txt)&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;189&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;file_&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;190&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;191&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# =====================================================================&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;192&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;do_btn41&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 颜色&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;193&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        color &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QColorDialog&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getColor&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Qt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;blue&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;Select Color&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;194&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;color&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;195&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;196&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;do_btn42&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 字体&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;197&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        font&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; ok &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QFontDialog&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;getFont&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;198&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;echo&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;font&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;199&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;200&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;do_btn43&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 自定义&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;201&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;202&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;window2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;show&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;203&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;204&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;205&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyWindow2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;QWidget&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;206&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token triple-quoted-string string&#34;&gt;&#39;&#39;&#39;自定义窗口&#39;&#39;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;207&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# 知识点：&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;208&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# 1. 为了得到返回值用到了自定义的信号 / 槽&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;209&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# 2. 为了显示动态数字，使用了计时器&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;210&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;211&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    before_close_signal &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; pyqtSignal&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 自定义信号（int 类型）&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;212&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;213&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;214&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token builtin&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__init__&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;215&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;216&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sec &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;217&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setWindowTitle&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;自定义窗口&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;218&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;resize&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;150&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;219&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;220&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lcd &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QLCDNumber&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;221&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn1 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; text&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;测试&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;222&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn2 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QPushButton&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; text&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;关闭&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;223&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;224&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        layout &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QVBoxLayout&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;225&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        layout&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;addWidget&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lcd&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;226&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        layout&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;addWidget&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;227&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        layout&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;addWidget&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;btn2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;228&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;229&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;timer &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QTimer&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;230&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;231&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;timer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;timeout&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;update&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 每次计时结束，触发 update&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;232&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn1&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;startTimer&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;233&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        btn2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;clicked&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;connect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;stopTimer&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 去到关闭前的处理&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;234&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;235&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;update&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;236&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sec &lt;span class=&#34;token operator&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;237&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lcd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;display&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sec&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# LED 显示数字 + 1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;238&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;239&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;startTimer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;240&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;timer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;start&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 计时器每秒计数&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;241&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;242&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;stopTimer&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;243&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;timer&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;stop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;244&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;sec &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;245&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;before_close_signal&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;emit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;lcd&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 发送信号，带参数 888&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;246&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;close&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 然后窗口关闭&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;247&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;248&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# 默认关闭事件     def closeEvent (self, e):        self.stopTimer ()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;249&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;250&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;251&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; __name__ &lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;__main__&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;252&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; sys&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;253&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;254&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    app &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QApplication&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;argv&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;255&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    win &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; MyWindow&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;256&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    win&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;show&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;257&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    sys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exit&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;app&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exec_&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://oreki.world/interview/vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%AE%80%E7%AD%94/</guid>
            <title>vue生命周期简答</title>
            <link>http://oreki.world/interview/vue%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%AE%80%E7%AD%94/</link>
            <category term="面试" scheme="http://oreki.world/categories/interview/" />
            <category term="Vue.js" scheme="http://oreki.world/tags/Vue-js/" />
            <pubDate>Sun, 16 Aug 2020 21:32:58 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h4 id=&#34;mvvm&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mvvm&#34;&gt;#&lt;/a&gt; MVVM&lt;/h4&gt;&lt;p&gt;MVVM 是 Model-View-ViewModel 缩写，也就是把 MVC 中的 Controller 演变成 ViewModel。Model 层代表数据模型，View 代表 UI 组件，ViewModel 是 View 和 Model 层的桥梁，数据会绑定到 viewModel 层并自动将数据渲染到页面中，视图变化的时候会通知 viewModel 层更新数据。&lt;/p&gt;&lt;h4 id=&#34;vue的生命周期&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#vue的生命周期&#34;&gt;#&lt;/a&gt; Vue 的生命周期&lt;/h4&gt;&lt;p&gt;Vue 实例从创建到销毁的过程，就是生命周期。也就是从开始创建、初始化数据、编译模板、挂载 Dom→渲染、更新→渲染、卸载等一系列过程，我们称这是 Vue 的生命周期。&lt;/p&gt;&lt;h5 id=&#34;它的生命周期中有多个事件钩子让我们在控制整个vue实例的过程中更容易形成好的逻辑&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#它的生命周期中有多个事件钩子让我们在控制整个vue实例的过程中更容易形成好的逻辑&#34;&gt;#&lt;/a&gt; 它的生命周期中有多个事件钩子，让我们在控制整个 vue 实例的过程中更容易形成好的逻辑。&lt;/h5&gt;&lt;ol&gt;&lt;li&gt;beforeCreate---- 创建前：组件实例更被创建，组件属性计算之前，数据对象 data 都为 undefined，未初始化。&lt;/li&gt;&lt;li&gt;created---- 创建后：组件实例创建完成，属性已经绑定，数据对象 data 已存在，但 dom 未生成，$el 未存在&lt;/li&gt;&lt;li&gt;beforeMount--- 挂载前：vue 实例的 $el 和 data 都已初始化，挂载之前为虚拟的 dom 节点，data.message 未替换&lt;/li&gt;&lt;li&gt;mounted----- 挂载后：vue 实例挂载完成，data.message 成功渲染。&lt;/li&gt;&lt;li&gt;beforeUpdate---- 更新前：当 data 变化时，会触发 beforeUpdate 方法&lt;/li&gt;&lt;li&gt;updated---- 更新后：当 data 变化时，会触发 updated 方法&lt;/li&gt;&lt;li&gt;beforeDestory--- 销毁前：组件销毁之前调用&lt;/li&gt;&lt;li&gt;destoryed--- 销毁后：组件销毁之后调用，对 data 的改变不会再触发周期函数，vue 实例已解除事件监听和 dom 绑定，但 dom 结构依然存在&lt;/li&gt;&lt;/ol&gt;&lt;h5 id=&#34;简述生命周期&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简述生命周期&#34;&gt;#&lt;/a&gt; 简述生命周期&lt;/h5&gt;&lt;ol&gt;&lt;li&gt;beforeCreate 实例准备开始创建&lt;/li&gt;&lt;li&gt;created 实例创建完成，数据初始化完成&lt;/li&gt;&lt;li&gt;beforeMount 实例挂在之前，无法访问 DOM&lt;/li&gt;&lt;li&gt;mounted 实例挂载完成，可以访问真实 DOM&lt;/li&gt;&lt;li&gt;beforeUpdate 数据发生更新，访问的是旧的 DOM，和最新的数据&lt;/li&gt;&lt;li&gt;updated：DOM 更 i 新完成，可以访问最新的 DOM&lt;/li&gt;&lt;li&gt;activated：组件被激活&lt;/li&gt;&lt;li&gt;deactivated：组件被冻结&lt;/li&gt;&lt;li&gt;beforeDestroy：组件实例即将销毁&lt;/li&gt;&lt;li&gt;destroyed：组件实例销毁完成&lt;/li&gt;&lt;li&gt;deactivated/beforeDestroy 必须是 keep-alive 的组件才会有&lt;/li&gt;&lt;/ol&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://oreki.world/%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E5%87%A0%E7%A7%8DIO%E5%8F%A3/</guid>
            <title>单片机的几种IO口</title>
            <link>http://oreki.world/%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E5%87%A0%E7%A7%8DIO%E5%8F%A3/</link>
            <category term="嵌入式" scheme="http://oreki.world/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/" />
            <category term="嵌入式" scheme="http://oreki.world/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/" />
            <pubDate>Tue, 11 Aug 2020 22:07:32 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;p&gt;学习单片机开发也有一段时间了，对一些底层的东西不太了解或不够深入，希望能弥补上这些知识空缺。&lt;/p&gt;&lt;h3 id=&#34;gpio的几种状态&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gpio的几种状态&#34;&gt;#&lt;/a&gt; GPIO 的几种状态&lt;/h3&gt;&lt;blockquote&gt;&lt;p&gt;输入状态&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;浮空输入&lt;br&gt;上 / 下拉输入&lt;br&gt;模拟输入&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;输出状态&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;推挽输出&lt;br&gt;开漏输出&lt;/p&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;h4 id=&#34;输入状态&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输入状态&#34;&gt;#&lt;/a&gt; 输入状态&lt;/h4&gt;&lt;h5 id=&#34;浮空输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#浮空输入&#34;&gt;#&lt;/a&gt; 浮空输入&lt;/h5&gt;&lt;p&gt;辅控输入即 IO 口在芯片内部既不接上拉电阻也不接下拉电阻，输入电阻相当于非常大。IO 口的电平状态不确定，完全由外部决定，悬空时用示波器直接测量可能是高电平也可能是低电平。由于浮空状态容易受到干扰甚至是静电导致芯片损坏，因此未使用的脚一般要避免浮空。&lt;br&gt;浮空输入的常见运用是检测按键状态。&lt;/p&gt;&lt;h5 id=&#34;上拉下拉输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#上拉下拉输入&#34;&gt;#&lt;/a&gt; 上拉 / 下拉输入&lt;/h5&gt;&lt;p&gt;IO 上拉输入指的是通过配置，在芯片内部将该 IO 串联电阻后接 Vcc；IO 下拉输入指的是通过配置，在芯片内部将该 IO 串联电阻后接 Gnd。&lt;/p&gt;&lt;h5 id=&#34;模拟输入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模拟输入&#34;&gt;#&lt;/a&gt; 模拟输入&lt;/h5&gt;&lt;p&gt;普通的数字 IO 口可以通过输入数据寄存器的 0 或 1 读取到外部电平的高低状态，而模拟 IO 无法通过输入寄存器的值反应电平的高低，一般需要借助 ADC 或电压比较器去获取外部电平的值。&lt;br&gt;常用于 AD 检测或电压比较器。&lt;/p&gt;&lt;h4 id=&#34;输出状态&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#输出状态&#34;&gt;#&lt;/a&gt; 输出状态&lt;/h4&gt;&lt;h5 id=&#34;推挽输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#推挽输出&#34;&gt;#&lt;/a&gt; 推挽输出&lt;/h5&gt;&lt;p&gt;推挽输出可以输出高低电平，可以直接驱动功耗不大的数字器件。内部结构相当于两个三极管或 MOSFET 互补工作，不管输出高还是低，总有一个开关管导通。如果两个推完输出相互直连，其中一个芯片若输出高，此时上面的 MOS 导通下面 MOS 闭合，而一个芯片若输出低，即下面的 MOS 导通上面的 MOS 闭合，电流会从上 MOS 导通的 VCC 直接流向下 MOS 导通的 GND，整个通路电阻很小，将会发生短路并损坏端口。因此推挽输出不能实现” 线与 “。&lt;/p&gt;&lt;h5 id=&#34;开漏输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开漏输出&#34;&gt;#&lt;/a&gt; 开漏输出&lt;/h5&gt;&lt;p&gt;开漏输出只能输出低电平，如果要输出高电平必须通过外部上拉电阻才能实现。内部输出 1 时 MOS 管截止，输出与地断开，这时候 IO 其实没有驱动能力，需要外部连接上拉电阻才能输出高电平；内部输出 0 时 MOS 管导通接地，所以开漏达到输出低电平效果。开漏输出的吸电流能力较强，适合做电流型的驱动。&lt;br&gt;关于开漏输出接上拉电阻的一大运用是 IIC 线路。当上拉电阻阻值较小时，上升沿的延迟就小，但功耗较大，反之，当上拉电阻阻值较大时，上升沿延迟就大，但功耗较小。但电阻影响上升沿不影响下降沿。根据上升沿时延和功耗的需要，综合考虑选择合适的上拉电阻。&lt;/p&gt;&lt;h5 id=&#34;高阻输出&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#高阻输出&#34;&gt;#&lt;/a&gt; 高阻输出&lt;/h5&gt;&lt;p&gt;IO 的高阻态实际上是输出 IO，与浮空输入有些类似，输入电阻都非常大。不同在于浮空输入是输入型 IO，而高阻态 IO 实际是开漏输出在输出高电平时的状态，且外部不接上拉电阻。&lt;/p&gt;&lt;h4 id=&#34;芯片复位后的io状态&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#芯片复位后的io状态&#34;&gt;#&lt;/a&gt; 芯片复位后的 IO 状态&lt;/h4&gt;&lt;p&gt;通常芯片复位后 IO 初始状态是高阻输入，为了防止芯片被异常复位时的 IO 电平变化对外部器件产生异常动作。但为了避免高阻输入产生漏电流，在芯片启动后需要对端口进行配置，改为其他状态，如内部拉高输入或输出。&lt;/p&gt;&lt;h4 id=&#34;io的驱动能力&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#io的驱动能力&#34;&gt;#&lt;/a&gt; IO 的驱动能力&lt;/h4&gt;&lt;p&gt;大部分的单片机 IO 口都可以选择驱动能力的强弱，一般来说驱动能力越强则功耗损耗也越大。IO 对外部的驱动能力既要看电压驱动能力，还要看电流驱动能力。有个简易的判断驱动能力是否足够的方法，将电路开路后则是电压是否符合负载电压，如果负责则表示电压驱动能力足够，否则电压驱动能力不够。如果接上负载后电压降低了，这就表明电流驱动能力不足。&lt;/p&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://oreki.world/webpack%E9%85%8D%E7%BD%AE/</guid>
            <title>webpack配置</title>
            <link>http://oreki.world/webpack%E9%85%8D%E7%BD%AE/</link>
            <category term="前端" scheme="http://oreki.world/categories/%E5%89%8D%E7%AB%AF/" />
            <category term="Vue" scheme="http://oreki.world/categories/%E5%89%8D%E7%AB%AF/Vue/" />
            <category term="前端" scheme="http://oreki.world/tags/%E5%89%8D%E7%AB%AF/" />
            <pubDate>Fri, 24 Jul 2020 20:48:06 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h3 id=&#34;建立-webpackvue-loader-项目&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#建立-webpackvue-loader-项目&#34;&gt;#&lt;/a&gt; 建立 webpack+vue-loader 项目&lt;/h3&gt;&lt;h4 id=&#34;初始化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化&#34;&gt;#&lt;/a&gt; 初始化&lt;/h4&gt;&lt;p&gt;创建 jtodo 目录，并初始化项目&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ git init // 初始化 git 仓库
$ npm init // 初始化 npm 项目，目录生成 `package.json` 文件
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装 webpack 打包工具，vue 解释器&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ npm i webpack webpack-cli vue-template-compiler css-loader --save-dev
$ npm i vue vue-loader --save-dev
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;新建 src 目录，及该目录下的 app.vue 和 index.js 文件&lt;/p&gt;&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption data-lang=&#34;HTML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;// app.vue&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;template&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;app&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;&lt;/span&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;template&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token script&#34;&gt;&lt;span class=&#34;token language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      text&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;hello world!&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;script&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token style&#34;&gt;&lt;span class=&#34;token language-css&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;#app&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; red&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;style&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// index.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Vue &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vue&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; App &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;./app.vue&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; root &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;createElement&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;div&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;document&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;body&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;appendChild&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;root&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 将 app.vue 挂载到 root 元素上&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Vue&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token function-variable function&#34;&gt;render&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&gt;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;App&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;$ &lt;span class=&#34;token function&#34;&gt;mount&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;root&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;配置项目的打包入口和出口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置项目的打包入口和出口&#34;&gt;#&lt;/a&gt; 配置项目的打包入口和出口&lt;/h4&gt;&lt;p&gt;在根目录新建 webpack.config.js 文件，并配置项目的打包入口和出口&lt;/p&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// webpack.config.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; path &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;path&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exports &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  entry&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; path&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__dirname&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 使用绝对路径&#39;src/index.js&#39;),&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  ouput&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    filename&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;bundle.js&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    path&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; path&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__dirname&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;dist&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;配置-build-脚本并测试&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置-build-脚本并测试&#34;&gt;#&lt;/a&gt; 配置 build 脚本并测试&lt;/h4&gt;&lt;p&gt;在 package.json 配置 build 脚本&lt;/p&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// package.json&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token string&#34;&gt;&#34;scripts&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;build&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;webpack --config webpack.config.js&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;此时尝试 $ npm run build ，报错如下&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ERROR in ./src/app.vue 1:0
Module parse failed: Unexpected token (1:0)
You may need an appropriate loader to handle this file type.
&amp;gt; &amp;lt;template&amp;gt;
|   &amp;lt;div&amp;gt;hello&amp;lt;/div&amp;gt;
| &amp;lt;/template&amp;gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;webpack-配置项目加载静态文件和-css-预处理器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#webpack-配置项目加载静态文件和-css-预处理器&#34;&gt;#&lt;/a&gt; webpack 配置项目加载静态文件和 CSS 预处理器&lt;/h3&gt;&lt;h4 id=&#34;配置-vue-文件中的-css-解释器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置-vue-文件中的-css-解释器&#34;&gt;#&lt;/a&gt; 配置 vue 文件中的 CSS 解释器&lt;/h4&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// webpack.config.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; VueLoaderPlugin &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;vue-loader&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exports &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  module&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    rules&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        test&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;.vue$ &lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        loader&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;vue-loader&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;//vue-loader@15.* 之后，还需 css-loader 去解析 vue 中的 style&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        test&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;\.css$ &lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        use&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token string&#34;&gt;&#39;css-loader&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  plugins&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;VueLoaderPlugin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;运行 $ npm run build ，成功打包项目&lt;/p&gt;&lt;h4 id=&#34;配置项目加载静态文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置项目加载静态文件&#34;&gt;#&lt;/a&gt; 配置项目加载静态文件&lt;/h4&gt;&lt;p&gt;项目中的一些小静态文件，可以把小静态文件转换成代码，直接写到 JS 文件中，减少 HTTP 请求。&lt;/p&gt;&lt;p&gt;安装解释器&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ npm i file-loader, url-loader --save-dev
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;配置项目加载静态文件&lt;/p&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// webpack.config.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exports &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  module&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    rules&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        test&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;\.(gif|jpg|jpeg|png|svg)$ &lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        use&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            loader&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;url-loader&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 把小静态文件转换成代码，直接写到 JS 文件中，减少 HTTP 请求&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            options&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;              limit&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2048&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 单位是 B&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;              name&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;[name]-aaa.[ext]&#39;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 重命名图片&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;接着在目录 src/assets/images/ 下新建 bg.svg 文件测试&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;svg xmlns=&#39;http://www.w3.org/2000/svg&#39; width=&#39;400&#39; height=&#39;400&#39; viewBox=&#39;0 0 800 800&#39;&amp;gt;&amp;lt;rect fill=&#39;#330033&#39; width=&#39;800&#39; height=&#39;800&#39;/&amp;gt;&amp;lt;g fill=&#39;none&#39; stroke=&#39;#404&#39; stroke-width=&#39;1&#39;&amp;gt;&amp;lt;path d=&#39;M769 229L1037 260.9M927 880L731 737 520 660 309 538 40 599 295 764 126.5 879.5 40 599-197 493 102 382-31 229 126.5 79.5-69-63&#39;/&amp;gt;&amp;lt;path d=&#39;M-31 229L237 261 390 382 603 493 308.5 537.5 101.5 381.5M370 905L295 764&#39;/&amp;gt;&amp;lt;path d=&#39;M520 660L578 842 731 737 840 599 603 493 520 660 295 764 309 538 390 382 539 269 769 229 577.5 41.5 370 105 295 -36 126.5 79.5 237 261 102 382 40 599 -69 737 127 880&#39;/&amp;gt;&amp;lt;path d=&#39;M520-140L578.5 42.5 731-63M603 493L539 269 237 261 370 105M902 382L539 269M390 382L102 382&#39;/&amp;gt;&amp;lt;path d=&#39;M-222 42L126.5 79.5 370 105 539 269 577.5 41.5 927 80 769 229 902 382 603 493 731 737M295-36L577.5 41.5M578 842L295 764M40-201L127 80M102 382L-261 269&#39;/&amp;gt;&amp;lt;/g&amp;gt;&amp;lt;g fill=&#39;#505&#39;&amp;gt;&amp;lt;circle cx=&#39;769&#39; cy=&#39;229&#39; r=&#39;5&#39;/&amp;gt;&amp;lt;circle cx=&#39;539&#39; cy=&#39;269&#39; r=&#39;5&#39;/&amp;gt;&amp;lt;circle cx=&#39;603&#39; cy=&#39;493&#39; r=&#39;5&#39;/&amp;gt;&amp;lt;circle cx=&#39;731&#39; cy=&#39;737&#39; r=&#39;5&#39;/&amp;gt;&amp;lt;circle cx=&#39;520&#39; cy=&#39;660&#39; r=&#39;5&#39;/&amp;gt;&amp;lt;circle cx=&#39;309&#39; cy=&#39;538&#39; r=&#39;5&#39;/&amp;gt;&amp;lt;circle cx=&#39;295&#39; cy=&#39;764&#39; r=&#39;5&#39;/&amp;gt;&amp;lt;circle cx=&#39;40&#39; cy=&#39;599&#39; r=&#39;5&#39;/&amp;gt;&amp;lt;circle cx=&#39;102&#39; cy=&#39;382&#39; r=&#39;5&#39;/&amp;gt;&amp;lt;circle cx=&#39;127&#39; cy=&#39;80&#39; r=&#39;5&#39;/&amp;gt;&amp;lt;circle cx=&#39;370&#39; cy=&#39;105&#39; r=&#39;5&#39;/&amp;gt;&amp;lt;circle cx=&#39;578&#39; cy=&#39;42&#39; r=&#39;5&#39;/&amp;gt;&amp;lt;circle cx=&#39;237&#39; cy=&#39;261&#39; r=&#39;5&#39;/&amp;gt;&amp;lt;circle cx=&#39;390&#39; cy=&#39;382&#39; r=&#39;5&#39;/&amp;gt;&amp;lt;/g&amp;gt;&amp;lt;/svg&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;配置-scss-解释器&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置-scss-解释器&#34;&gt;#&lt;/a&gt; 配置 SCSS 解释器&lt;/h4&gt;&lt;p&gt;安装解释器&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ npm i sass-loader, node-sass, style-loader --save-dev
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;配置 SCSS 解释器&lt;/p&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// webpack.config.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exports &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  module&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    rules&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        test&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token regex&#34;&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token regex-source language-regex&#34;&gt;\.scss$ &lt;/span&gt;&lt;span class=&#34;token regex-delimiter&#34;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        use&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token string&#34;&gt;&#39;style-loader&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;// 将 JS 字符串生成为 style 节点&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token string&#34;&gt;&#34;css-loader&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 将 CSS 转化成 CommonJS 模&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;          &lt;span class=&#34;token string&#34;&gt;&#34;sass-loader&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;接着在目录 src/assets/styles/ 下新建 global.scss 文件测试&lt;/p&gt;&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption data-lang=&#34;CSS&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;// global.scss&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;html, body &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 0&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;width&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 100%&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;height&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 100%&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token selector&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;background-image&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token url&#34;&gt;&lt;span class=&#34;token function&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string url&#34;&gt;&#39;../images/bg.svg&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;background-size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; cover&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;background-position&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; center center&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 14px&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; #4d4d4d&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token property&#34;&gt;font-weight&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; 300&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;配置开发环境&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置开发环境&#34;&gt;#&lt;/a&gt; 配置开发环境&lt;/h3&gt;&lt;h4 id=&#34;配置-webpack-dev-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置-webpack-dev-server&#34;&gt;#&lt;/a&gt; 配置 webpack-dev-server&lt;/h4&gt;&lt;p&gt;webpack-dev-server 能帮助程序员在开发环境中预览项目&lt;/p&gt;&lt;p&gt;安装&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ npm i webpack-dev-server cross-env --save-dev
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在 package.json 配置 dev 脚本，并设置环境变量标识环境，同时使得跨平台命令统一（cross-env）&lt;/p&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// package.json&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token string&#34;&gt;&#34;scripts&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;build&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cross-env NODE_ENV=production webpack --config webpack.config.js&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;dev&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;cross-env NODE_ENV=development webpack-dev-server --config webpack.config.js&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在根目录新建 webpack.config.js 文件，并配置项目的开发环境&lt;/p&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// webpack.config.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; path &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;path&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; VueLoaderPlugin &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;vue-loader&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; webpack &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;webpack&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 引入 webpack&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// 启动 build 或 dev 脚本时，会把环境变量存在 process.env 中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; isDev &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; process&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;env&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;===&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;development&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; config &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  target&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;web&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 编译目标 web 平台&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  entry&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; path&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__dirname&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;src/index.js&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;// 使用绝对路径&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  output&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    filename&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;bundle.js&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    path&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; path&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;__dirname&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;dist&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  module&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    rules&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  plugins&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;webpack&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DefinePlugin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token string&#34;&gt;&#39;process.env&#39;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token constant&#34;&gt;NODE_ENV&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; isDev &lt;span class=&#34;token operator&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#34;development&#34;&#39;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;&#34;production&#34;&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;VueLoaderPlugin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;isDev&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;devServer &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    port&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8000&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    host&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;0.0.0.0&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 设 IP 为 0.0.0.0 可用同时用 localhost 和内网 IP 访问&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    overlay&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 在网页上报错&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      errors&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;module&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;exports &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; config&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;配置html入口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置html入口&#34;&gt;#&lt;/a&gt; 配置 html 入口&lt;/h4&gt;&lt;p&gt;安装&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ npm i html-webpack-plugin --save-dev
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;预览项目需要有一个 html 文件去包含 index.js ，在 webpack.config.js 添加如下信息&lt;/p&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// webpack.config.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; HTMLPlugin &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;require&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;html-webpack-plugin&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;const&lt;/span&gt; config &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  plugins&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;HTMLPlugin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;配置热重载和-devtool&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置热重载和-devtool&#34;&gt;#&lt;/a&gt; 配置热重载和 devtool&lt;/h4&gt;&lt;p&gt;前面修改组件代码后，会自动更新整个页面，现在配置修改组件时，仅重新渲染该组件。另外，添加了 devtool 来帮助我们在浏览器调试代码。&lt;/p&gt;&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption data-lang=&#34;JavaScript&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;// webpack.config.js&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;isDev&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token operator&#34;&gt;...&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;devtool &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;#cheap-module-eval-source-map&#39;&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 用 devtool 检查代码&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;plugins&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;webpack&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;HotModuleReplacementPlugin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 模块热重载&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;webpack&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;NoEmitOnErrorsPlugin&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 减少不需要信息的展示&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://oreki.world/%E5%A6%82%E4%BD%95%E7%BB%98%E5%88%B6%E7%9F%A9%E5%BD%A2%E5%B9%B6%E9%80%9A%E8%BF%87%E5%9C%A8PyQt5%E4%B8%AD%E6%8B%96%E6%94%BE%E6%9D%A5%E8%B0%83%E6%95%B4%E5%85%B6%E5%BD%A2%E7%8A%B6/</guid>
            <title>如何绘制矩形并通过在PyQt5中拖放来调整其形状</title>
            <link>http://oreki.world/%E5%A6%82%E4%BD%95%E7%BB%98%E5%88%B6%E7%9F%A9%E5%BD%A2%E5%B9%B6%E9%80%9A%E8%BF%87%E5%9C%A8PyQt5%E4%B8%AD%E6%8B%96%E6%94%BE%E6%9D%A5%E8%B0%83%E6%95%B4%E5%85%B6%E5%BD%A2%E7%8A%B6/</link>
            <category term="Python" scheme="http://oreki.world/categories/python/" />
            <category term="Pyqt5" scheme="http://oreki.world/categories/python/Pyqt5/" />
            <category term="Pyqt5" scheme="http://oreki.world/tags/Pyqt5/" />
            <pubDate>Sat, 27 Jun 2020 15:07:57 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;p&gt;由 PyQt5 创建的 GUI 上绘制一个矩形.&lt;br&gt;拖动时，通过鼠标移动来调整矩形形状.&lt;br&gt;释放鼠标左键时，确定矩形形状.&lt;/p&gt;&lt;h3 id=&#34;调用mousemoveevent函数&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#调用mousemoveevent函数&#34;&gt;#&lt;/a&gt; 调用 mouseMoveEvent 函数&lt;/h3&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; sys&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; PyQt5 &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; QtWidgets&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; QtCore&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; PyQt5&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;QtGui &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; QPainter&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MyWidget&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;QtWidgets&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;QWidget&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token builtin&#34;&gt;super&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;__init__&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setGeometry&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;30&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;600&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;400&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;begin &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QtCore&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;QPoint&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;end &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QtCore&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;QPoint&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;show&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;paintEvent&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        qp &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QtGui&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;QPainter&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        br &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QtGui&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;QBrush&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;QtGui&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;QColor&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;40&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        qp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setBrush&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;br&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;   &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        qp&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;drawRect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;QtCore&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;QRect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;begin&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;end&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;       &lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mousePressEvent&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;begin &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pos&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;end &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pos&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;update&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mouseMoveEvent&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;end &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pos&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;update&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mouseReleaseEvent&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;begin &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pos&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;end &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pos&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;update&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://oreki.world/pyqt5%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</guid>
            <title>pyqt5插入图片</title>
            <link>http://oreki.world/pyqt5%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</link>
            <category term="Python" scheme="http://oreki.world/categories/python/" />
            <category term="Pyqt5" scheme="http://oreki.world/categories/python/Pyqt5/" />
            <category term="Pyqt5" scheme="http://oreki.world/tags/Pyqt5/" />
            <pubDate>Mon, 25 May 2020 20:39:56 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h3 id=&#34;designer中图片资源插入&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#designer中图片资源插入&#34;&gt;#&lt;/a&gt; designer 中图片资源插入&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://orekisama.gitee.io/blog-image-bed/blogimg/assets/pyqt5%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/1.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;如修改 lable 控件的背景图，选择资源，导入 qrc 文件。&lt;/p&gt;&lt;p&gt;qrc 文件格式编辑&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;RCC&amp;gt;
  &amp;lt;qresource&amp;gt;
    &amp;lt;file&amp;gt;1.jpeg&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/add.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/add_to_list.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/center_volume.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/cycle.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/cycle_one.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/de.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/delete.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/disc.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/downloads.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/high_volume.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/kk-music.ico&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/logo.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/music.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/my_playlist.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/no_volume.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/on.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/open_folder.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/random.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/small_volume.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/song.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/start.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/搜索.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/网易云音乐.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/stop.png&amp;lt;/file&amp;gt;
    &amp;lt;file&amp;gt;ico/音量 .png&amp;lt;/file&amp;gt;
  &amp;lt;/qresource&amp;gt;
&amp;lt;/RCC&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;再使用命令&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pyrcc5 xx.qrc -o xx.py
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;并在 ui 文件转换的 py 文件中导入该文件，作为图片资源文件。&lt;/p&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://oreki.world/ubuntu%E5%AE%89%E8%A3%85mariadb/</guid>
            <title>ubuntu安装mariadb</title>
            <link>http://oreki.world/ubuntu%E5%AE%89%E8%A3%85mariadb/</link>
            <category term="Linux" scheme="http://oreki.world/categories/Linux/" />
            <category term="Linux" scheme="http://oreki.world/tags/Linux/" />
            <pubDate>Tue, 12 May 2020 17:40:28 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h3 id=&#34;安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装&#34;&gt;#&lt;/a&gt; 安装&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; update&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; mariadb-server&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;验证&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#验证&#34;&gt;#&lt;/a&gt; 验证&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; systemctl status mariadb&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;初始化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#初始化&#34;&gt;#&lt;/a&gt; 初始化&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; mysql_secure_installation&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;脚本将会提示你输入 root 密码：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Enter current password for root (enter for none):&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;你会被问到是否 MySQL root 用户设置密码：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Set root password? [Y/n]&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;你将会被要求移除匿名用户，限制 root 用户访问本地机器，移除测试数据库，并且重新加载权限表。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Remove anonymous users? [Y/n] Y&lt;br&gt;Disallow root login remotely? [Y/n] Y&lt;br&gt;Remove test database and access to it? [Y/n] Y&lt;br&gt;Reload privilege tables now? [Y/n] Y&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 id=&#34;允许远程连接&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#允许远程连接&#34;&gt;#&lt;/a&gt; 允许远程连接&lt;/h3&gt;&lt;h4 id=&#34;修改表&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#修改表&#34;&gt;#&lt;/a&gt; 修改表&lt;/h4&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;GRANT ALL PRIVILEGES ON *.* TO &lt;span class=&#34;token string&#34;&gt;&#39;root&#39;&lt;/span&gt;@&lt;span class=&#34;token string&#34;&gt;&#39;%&#39;&lt;/span&gt; IDENTIFIED BY &lt;span class=&#34;token string&#34;&gt;&#39;root&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;flush privileges&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;修改配置文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#修改配置文件&#34;&gt;#&lt;/a&gt; 修改配置文件&lt;/h4&gt;&lt;p&gt;将 /etc/mysql/mariadb.conf.d/50-server.cnf 中 bind-address = 127.0.0.1 加# 注释掉&lt;/p&gt;&lt;h4 id=&#34;重启服务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#重启服务&#34;&gt;#&lt;/a&gt; 重启服务&lt;/h4&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;systemctl restart mariadb.service&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://oreki.world/Pyqt5%E5%B5%8C%E5%A5%97%E7%AA%97%E5%8F%A3%E5%88%87%E6%8D%A2/</guid>
            <title>Pyqt5嵌套窗口切换</title>
            <link>http://oreki.world/Pyqt5%E5%B5%8C%E5%A5%97%E7%AA%97%E5%8F%A3%E5%88%87%E6%8D%A2/</link>
            <category term="Python" scheme="http://oreki.world/categories/python/" />
            <category term="Pyqt5" scheme="http://oreki.world/categories/python/Pyqt5/" />
            <category term="Python" scheme="http://oreki.world/tags/Python/" />
            <pubDate>Thu, 07 May 2020 11:53:03 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h3 id=&#34;使用designer设计&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用designer设计&#34;&gt;#&lt;/a&gt; 使用 designer 设计&lt;/h3&gt;&lt;p&gt;使用 QstackerWidget 进行多界面切换&lt;/p&gt;&lt;p&gt;在 stackedWidget 对象中插入页，即可实现多页面。&lt;br&gt;将控件放入指定对应页面。&lt;br&gt;&lt;img data-src=&#34;https://orekisama.gitee.io/blog-image-bed/blogimg/assets/Pyqt5%E5%B5%8C%E5%A5%97%E7%AA%97%E5%8F%A3%E5%88%87%E6%8D%A2/designer%E8%AE%BE%E8%AE%A1%E5%9B%BE.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&lt;h3 id=&#34;ui代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ui代码&#34;&gt;#&lt;/a&gt; Ui 代码&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName(&amp;quot;MainWindow&amp;quot;)
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName(&amp;quot;centralwidget&amp;quot;)
        self.B1 = QtWidgets.QPushButton(self.centralwidget)
        self.B1.setGeometry(QtCore.QRect(50, 180, 75, 23))
        self.B1.setObjectName(&amp;quot;B1&amp;quot;)
        self.B2 = QtWidgets.QPushButton(self.centralwidget)
        self.B2.setGeometry(QtCore.QRect(50, 280, 75, 23))
        self.B2.setObjectName(&amp;quot;B2&amp;quot;)
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setGeometry(QtCore.QRect(200, 60, 551, 421))
        self.stackedWidget.setObjectName(&amp;quot;stackedWidget&amp;quot;)
        self.page1 = QtWidgets.QWidget()
        self.page1.setObjectName(&amp;quot;page1&amp;quot;)
        self.frame1 = QtWidgets.QFrame(self.page1)
        self.frame1.setGeometry(QtCore.QRect(180, 110, 221, 141))
        self.frame1.setStyleSheet(&amp;quot;background-color: rgb(255, 255, 127);&amp;quot;)
        self.frame1.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame1.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame1.setObjectName(&amp;quot;frame1&amp;quot;)
        self.stackedWidget.addWidget(self.page1)
        self.page2 = QtWidgets.QWidget()
        self.page2.setObjectName(&amp;quot;page2&amp;quot;)
        self.frame2 = QtWidgets.QFrame(self.page2)
        self.frame2.setGeometry(QtCore.QRect(149, 89, 251, 191))
        self.frame2.setStyleSheet(&amp;quot;background-color: rgb(255, 0, 127);&amp;quot;)
        self.frame2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame2.setObjectName(&amp;quot;frame2&amp;quot;)
        self.stackedWidget.addWidget(self.page2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 23))
        self.menubar.setObjectName(&amp;quot;menubar&amp;quot;)
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName(&amp;quot;statusbar&amp;quot;)
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate(&amp;quot;MainWindow&amp;quot;, &amp;quot;MainWindow&amp;quot;))
        self.B1.setText(_translate(&amp;quot;MainWindow&amp;quot;, &amp;quot;一号色&amp;quot;))
        self.B2.setText(_translate(&amp;quot;MainWindow&amp;quot;, &amp;quot;二号色&amp;quot;))

&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;控制代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#控制代码&#34;&gt;#&lt;/a&gt; 控制代码&lt;/h3&gt;&lt;p&gt;button 按钮绑定对应事件进行页面展示。&lt;/p&gt;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;import sys
from PyQt5.QtWidgets import QApplication, QMainWindow
from win import Ui_MainWindow


class MainWin(QMainWindow, Ui_MainWindow):
    def __init__(self, parent=None):
        super(MainWin, self).__init__(parent)
        self.setupUi(self)

        self.B1.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(0))  # 点击按钮1展示第一个frame
        self.B2.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(1))  # 点击按钮2展示第二个frame


if __name__ == &#39;__main__&#39;:
    app = QApplication(sys.argv)
    win = MainWin()
    win.show()
    sys.exit(app.exec_())
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;效果图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#效果图&#34;&gt;#&lt;/a&gt; 效果图&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://orekisama.gitee.io/blog-image-bed/blogimg/assets/Pyqt5%E5%B5%8C%E5%A5%97%E7%AA%97%E5%8F%A3%E5%88%87%E6%8D%A2/b1.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://orekisama.gitee.io/blog-image-bed/blogimg/assets/Pyqt5%E5%B5%8C%E5%A5%97%E7%AA%97%E5%8F%A3%E5%88%87%E6%8D%A2/b2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://oreki.world/django%E9%9B%86%E6%88%90%E6%94%AF%E4%BB%98%E5%AE%9D/</guid>
            <title>django集成支付宝</title>
            <link>http://oreki.world/django%E9%9B%86%E6%88%90%E6%94%AF%E4%BB%98%E5%AE%9D/</link>
            <category term="Python" scheme="http://oreki.world/categories/python/" />
            <category term="Django" scheme="http://oreki.world/categories/python/Django/" />
            <category term="Python" scheme="http://oreki.world/tags/Python/" />
            <pubDate>Mon, 04 May 2020 19:43:49 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h3 id=&#34;支付宝支付&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#支付宝支付&#34;&gt;#&lt;/a&gt; 支付宝支付&lt;/h3&gt;&lt;h4 id=&#34;alipay&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#alipay&#34;&gt;#&lt;/a&gt; Alipay&lt;/h4&gt;&lt;p&gt;阿里的支付也就是支付宝，官网以及出了 Python 的 SDK 了～所以要先下载&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pip install alipay-sdk-python
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;具体操作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#具体操作&#34;&gt;#&lt;/a&gt; 具体操作&lt;/h4&gt;&lt;h5 id=&#34;第一步-访问沙箱环境地址注册一个商家账户&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第一步-访问沙箱环境地址注册一个商家账户&#34;&gt;#&lt;/a&gt; 第一步 访问沙箱环境地址，注册一个商家账户&lt;/h5&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9vcGVuaG9tZS5hbGlwYXkuY29tL3BsYXRmb3JtL2FwcERhaWx5Lmh0bT90YWI9aW5mbw==&#34;&gt;https://openhome.alipay.com/platform/appDaily.htm?tab=info&lt;/span&gt;&lt;br&gt;按照他要求的方式生成商户的公钥和私钥&lt;sub&gt;把公钥放入网站&lt;/sub&gt;私钥自己留着签名用～～&lt;/p&gt;&lt;p&gt;下面是商户信息以及卖家信息&lt;sub&gt;下载一个支付宝的沙箱环境&lt;/sub&gt;&lt;/p&gt;&lt;p&gt;然后按照下面的账号和密码登录和支付&lt;s&gt;只支持安卓的～&lt;br&gt;按照他要求的方式生成商户的公钥和私钥&lt;sub&gt;把公钥放入网站&lt;/sub&gt;私钥自己留着签名用&lt;/s&gt;&lt;/p&gt;&lt;p&gt;下面是商户信息以及卖家信息&lt;sub&gt;下载一个支付宝的沙箱环境&lt;/sub&gt;&lt;/p&gt;&lt;p&gt;然后按照下面的账号和密码登录和支付～～只支持安卓的～&lt;/p&gt;&lt;h5 id=&#34;第二步-阅读文档-找到一个适合自己的api&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#第二步-阅读文档-找到一个适合自己的api&#34;&gt;#&lt;/a&gt; 第二步 阅读文档 找到一个适合自己的 API&lt;/h5&gt;&lt;h5 id=&#34;代码实例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代码实例&#34;&gt;#&lt;/a&gt; 代码实例&lt;/h5&gt;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;from django.conf.urls import url
from django.contrib import admin
from demo.views import AliPayView, PayHandlerView
urlpatterns = [
  url(r&#39;^admin/&#39;, admin.site.urls),
  url(r&#39;^pay$&#39;, AliPayView.as_view()),
  url(r&#39;^alipay_handler&#39;, PayHandlerView.as_view()),
]
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; django&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;shortcuts &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; render&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; redirect&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; django&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;http &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; HttpResponse&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; rest_framework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;views &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; APIView&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; rest_framework&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;response &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; Response&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; alipay&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;aop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;api&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;DefaultAlipayClient &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; DefaultAlipayClient&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; alipay&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;aop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;api&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AlipayClientConfig &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; AlipayClientConfig&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; alipay&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;aop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;api&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;domain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AlipayTradePrecreateModel &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; AlipayTradePrecreateModel&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; alipay&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;aop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;api&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; AlipayTradePrecreateRequest &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; AlipayTradePrecreateRequest&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; alipay&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;aop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;api&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;domain&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AlipayTradePagePayModel &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; AlipayTradePagePayModel&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; alipay&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;aop&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;api&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;AlipayTradePagePayRequest &lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; AlipayTradePagePayRequest&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; time&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Create your views here.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 沙箱环境地址：https://openhome.alipay.com/platform/appDaily.htm?tab=info&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# &#34;https://openapi.alipaydev.com/gateway.do&#34;, APP_ID, APP_PRIVATE_KEY, &#34;json&#34;, CHARSET, ALIPAY_PUBLIC_KEY, &#34;RSA2&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;ali_pay&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# 为阿里支付实例化一个配置信息对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  alipay_config &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; AlipayClientConfig&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sandbox_debug&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# 初始化各种配置信息&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# 阿里提供服务的接口&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  alipay_config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;server_url &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;https://openapi.alipaydev.com/gateway.do&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# 申请的沙箱环境的 app_id&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  alipay_config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;app_id &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;2016091800540924&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# 商户的私钥&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;keys/app_private_key.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; alipay_config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;app_private_key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# 阿里的公钥&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;keys/alipay_public_key.txt&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; alipay_config&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;alipay_public_key &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token comment&#34;&gt;# 实例化一个支付对象并返回&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  alipay_client &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; DefaultAlipayClient&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;alipay_client_config&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;alipay_config&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; alipay_client&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;AliPayView&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;APIView&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; render&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;pay.html&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# 生成支付宝自带页面的 API&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# 得到阿里支付的实例化对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    client &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; ali_pay&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# 为 API 生成一个模板对象 初始化参数用的&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    model &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; AlipayTradePagePayModel&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# 订单号&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    model&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;out_trade_no &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;pay&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;time&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# 金额&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    model&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;total_amount &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;8888&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# 商品标题&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    model&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;subject &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;测试&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# 商品详细内容&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    model&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;body &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;支付宝测试&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# 销售产品码，与支付宝签约的产品码名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    model&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;product_code &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;FAST_INSTANT_TRADE_PAY&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# 实例化一个请求对象&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    request &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; AlipayTradePagePayRequest&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;biz_model&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;model&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# get 请求 用户支付成功后返回的页面请求地址&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;return_url &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://140.143.63.45:8000/alipay_handler&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# post 请求 用户支付成功通知商户的请求地址&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;notify_url &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;http://140.143.63.45:8000/alipay_handler&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token comment&#34;&gt;# 利用阿里支付对象发一个获得页面的请求 参数是 request&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    response &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; client&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;page_execute&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; http_method&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;GET&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; redirect&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;response&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;PayHandlerView&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;APIView&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;# return_url 的回调地址&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token comment&#34;&gt;# 用户支付成功之后回到哪&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; HttpResponse&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;return_url测试&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; request&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;request&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 用户支付成功 在这里修改订单状态以及优惠券贝里等等情况&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; HttpResponse&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;notify_url&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;views&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;py&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://oreki.world/%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97celery/</guid>
            <title>分布式消息队列celery</title>
            <link>http://oreki.world/%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97celery/</link>
            <category term="Python" scheme="http://oreki.world/categories/python/" />
            <category term="Python" scheme="http://oreki.world/tags/Python/" />
            <pubDate>Tue, 21 Apr 2020 21:23:38 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h3 id=&#34;celery基本原理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#celery基本原理&#34;&gt;#&lt;/a&gt; celery 基本原理&lt;/h3&gt;&lt;p&gt;1、客户端也就是 python（django/flask 等）发布任务&lt;/p&gt;&lt;p&gt;2、发布的任务存到任务队列里面，可以以 redis、rabbitMQ、MessageQueue、MySQL 存储，一般在 django/flask 程序里 redis 居多&lt;/p&gt;&lt;p&gt;3、任务处理者会不断从任务队列里面获取任务执行&lt;/p&gt;&lt;h3 id=&#34;celery设计&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#celery设计&#34;&gt;#&lt;/a&gt; Celery 设计&lt;/h3&gt;&lt;p&gt;celery 由五大模块实现。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;Task&lt;br&gt;就是任务，有异步任务和定时任务。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Broker&lt;br&gt;中间人，接收生产者发来的消息即 Task，将任务存入队列。任务的消费者是 Worker。Celery 本身不提供队列服务，推荐用 Redis 或 RabbitMQ 实现队列服务。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Worker&lt;br&gt;执行任务的单元，它实时监控消息队列，如果有任务就获取任务并执行它。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Beat&lt;br&gt;定时任务调度器，根据配置定时将任务发送给 Broler。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Backend&lt;br&gt;用于存储任务的执行结果。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;img data-src=&#34;%E7%BB%84%E6%88%90%E5%85%B3%E7%B3%BB.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&lt;h3 id=&#34;celery安装配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#celery安装配置&#34;&gt;#&lt;/a&gt; Celery 安装配置&lt;/h3&gt;&lt;p&gt;Celery 4.0 + 及以后版本不支持在 windows 系统上运行。如果你希望在 windows 系统上使用 celery, 有两种方法。&lt;br&gt;1. 安装 3.1.25 版本&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pip install celery==3.1.25
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2. 安装 gevent&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pip install gevent
# 启动worker
celery -A &amp;lt;module&amp;gt; worker -l info -P gevent
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;简单案例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简单案例&#34;&gt;#&lt;/a&gt; 简单案例&lt;/h3&gt;&lt;p&gt;首先编写一个文件 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS10YXNrMS1kcTFoMDE2YXV6YS5weQ==&#34;&gt;命名为 task1.py&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;from celery import Celery
app = Celery(&#39;tasks&#39;,broker=&#39;redis://192.168.1.102:6379/0&#39;)
# redis://192.168.1.102:6379/0 是redis数据库地址，无需账号密码验证，也是ssrf在获取内网系统权限的方式之一
@app.task
def add(x,y):
    print(&#39;传递 {} + {} = {}&#39;.format(x,y,x+y))
    return x+y
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后启动 redis 数据库&lt;br&gt;接下来再 task1 文件夹执行命令&lt;/p&gt;&lt;pre&gt;&lt;code&gt;celery -A task1 worker --loglevel=info
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;就会看到消息队列都启动&lt;br&gt;&lt;img data-src=&#34;1.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;到现在所有的队列都启动，可以向这个队列添加任务等待处理&lt;/p&gt;&lt;p&gt;方法是再 task1 目录下打开 cmd 窗口，进入 python 交互界面&lt;/p&gt;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;from task1 import add
add.delay(6,12)
add.delay(6,6)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img data-src=&#34;2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&lt;h4 id=&#34;保存结果&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#保存结果&#34;&gt;#&lt;/a&gt; 保存结果&lt;/h4&gt;&lt;p&gt;上面只是一个发送任务的调用，结果是拿不到的。上面也没有接收返回值，这次把返回值保存到起来&lt;br&gt;修改 task1 内容&lt;/p&gt;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;app = Celery(&#39;tasks&#39;,broker=&#39;redis://192.168.1.102:6379/0&#39;,backend=&#39;redis://192.168.1.102:6379/0&#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后要重启 Worker，IDLE 也要重启&lt;br&gt;然后这样就能获取结果了&lt;/p&gt;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;t = add.delay(1, 1)
t.get()
# 还可以设置超时时间 t.get(timeout=5)

# 如果出错，获取错误结果，不触发异常
# 使用命令t.get(propagate=False)    
# t.traceback  （打印异常详细结果）

# 还可以获取任务状态
# t.ready() 返回True 或者False
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;在项目中使用celery&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#在项目中使用celery&#34;&gt;#&lt;/a&gt; 在项目中使用 celery&lt;/h3&gt;&lt;p&gt;可以把 celery 配置成一个应用，假设应用名字是 CeleryPro，目录格式如下：&lt;br&gt;CeleryPro&lt;br&gt;├─__init.py&lt;br&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1jZWxlcnktMm43Y3BpLnB5&#34;&gt;├─celery.py&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS10YXNrcy0zMDlidWgucHk=&#34;&gt;├─tasks.py&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1jZWxlcnktdnk3aTczY2N4eTg1YXkxNGY5eWpiOGZ0bzNlam94ZWxjYTA5N2JncTZhLnB5&#34;&gt;这里的连接文件命名必须为 celery.py&lt;/span&gt;，其他名字随意&lt;/p&gt;&lt;h4 id=&#34;celery文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#celery文件&#34;&gt;#&lt;/a&gt; celery 文件&lt;/h4&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3huLS1jZWxlcnktb3Y3aW04Y2Mxd2ZxM2FnaW55MGJyejB3Zmp6YS5weQ==&#34;&gt;这个文件名必须是 celery.py&lt;/span&gt;：&lt;/p&gt;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;from __future__ import absolute_import, unicode_literals
from celery import Celery

app = Celery(&#39;CeleryPro&#39;,
             broker=&#39;redis://192.168.1.102:6379&#39;,
             backend=&#39;redis://192.168.1.102:6379&#39;,
             include=[&#39;CeleryPro.tasks&#39;])
app.conf.update(
    result_expires=3600,
)

if __name__ == &#39;__main__&#39;:
    app.start()
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;tasks文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#tasks文件&#34;&gt;#&lt;/a&gt; tasks 文件&lt;/h4&gt;&lt;p&gt;这个文件开始两行就多了一个点，这里要导入上面的 celery.py 文件。后面只要写各种任务加上装饰器就可以了：&lt;/p&gt;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;from __future__ import absolute_import, unicode_literals
from .celery import app
import time

@app.task
def add(x, y):
    print(&amp;quot;计算2个值的和: %s %s&amp;quot; % (x, y))
    return x+y

@app.task
def upper(v):
    for i in range(10):
        time.sleep(1)
        print(i)
    return v.upper()
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;启动worker&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#启动worker&#34;&gt;#&lt;/a&gt; 启动 worker&lt;/h4&gt;&lt;p&gt;这里注意用的都是 CeleryPro：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;celery -A CeleryPro worker -loglevel=info  # 前台启动不推荐
celery -A CeleryPro worker -l info  # 前台启动简写
celery multi start w1 -A  CeleryPro -l info  # 推荐用后台启动
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;定时任务&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#定时任务&#34;&gt;#&lt;/a&gt; 定时任务&lt;/h4&gt;&lt;p&gt;主要修改 celery.py 文件&lt;/p&gt;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;from __future__ import absolute_import, unicode_literals
from celery import Celery
from celery.schedules import crontab
from datetime import timedelta

app = Celery(&#39;CeleryPro&#39;,
             broker=&#39;redis://192.168.1.102&#39;,
             backend=&#39;redis://192.168.1.102&#39;,
             include=[&#39;CeleryPro.tasks&#39;])

app.conf.CELERYBEAT_SCHEDULE = {
    &#39;add every 10 seconds&#39;: {
        &#39;task&#39;: &#39;CeleryPro.tasks.add&#39;,
        &#39;schedule&#39;: timedelta(seconds=10),  
        # 可以用timedelta对象
        # &#39;schedule&#39;: 10,  # 也支持直接用数字表示秒数
        &#39;args&#39;: (1, 2)
    },
    &#39;upper every 2 minutes&#39;: {
        &#39;task&#39;: &#39;CeleryPro.tasks.upper&#39;,
        &#39;schedule&#39;: crontab(minute=&#39;*/2&#39;),
        &#39;args&#39;: (&#39;abc&#39;, ),
    },
}

# app.conf.CELERY_TIMEZONE = &#39;UTC&#39;
app.conf.CELERY_TIMEZONE = &#39;Asia/Shanghai&#39;

# Optional configuration, see the application user guide.
app.conf.update(
    CELERY_TASK_RESULT_EXPIRES=3600,
)

if __name__ == &#39;__main__&#39;:
    app.start()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;启动使用命令&lt;/p&gt;&lt;pre&gt;&lt;code&gt;celery -A CeleryPro beat -l info
celery -A CeleryPro worker -l info
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;新例子&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#新例子&#34;&gt;#&lt;/a&gt; 新例子&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;# tasks.py
# coding:utf-8
from celery import Celery,platforms

app = Celery(&#39;tasks&#39;)
app.config_from_object(&#39;config&#39;)
platforms.C_FORCE_ROOT = True

@app.task
def add(x,y):
    return x + y
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;和另一个文件&lt;/p&gt;&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;# config.py
# coding:utf-8
from __future__ import absolute_import
from celery.schedules import crontab
from datetime import timedelta

BROKER_URL = &#39;redis://127.0.0.1:6379/0&#39;

CELERYBEAT_SCHEDULE = {
    &#39;add-every-2-seconds&#39;: {
        &#39;task&#39;: &#39;tasks.add&#39;,
        &#39;schedule&#39;: timedelta(seconds=2),
        &#39;args&#39;: (16, 10),
    },
}

CELERY_TIMEZONE = &#39;Asia/Shanghai&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后打开三个 cmd 窗口，依次输入：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;celery -A tasks beat -l info
celery -A tasks worker -l info
celery -A tasks flower
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后访问本地 5555 端口即可～&lt;/p&gt;&lt;h4 id=&#34;查看异步任务情况&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查看异步任务情况&#34;&gt;#&lt;/a&gt; 查看异步任务情况&lt;/h4&gt;&lt;p&gt;Celery 提供了一个工具 flower，将各个任务的执行情况、各个 worker 的健康状态进行监控并以可视化的方式展现&lt;/p&gt;&lt;p&gt;安装 flower:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;pip install flower
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;启动 flower（默认会启动一个 webserver，端口为 5555）&lt;/p&gt;&lt;p&gt;在另一个 Terminal 中：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;celery -A task1 flower
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里的 task1 是上面创建的 py 文件&lt;/p&gt;&lt;p&gt;进入&lt;/p&gt;&lt;pre&gt;&lt;code&gt;http://localhost:5555
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;查看&lt;/p&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://oreki.world/pyqt5%E6%96%87%E6%9C%AC%E9%AB%98%E4%BA%AE/</guid>
            <title>pyqt5文本高亮</title>
            <link>http://oreki.world/pyqt5%E6%96%87%E6%9C%AC%E9%AB%98%E4%BA%AE/</link>
            <category term="Python" scheme="http://oreki.world/categories/python/" />
            <category term="Pyqt5" scheme="http://oreki.world/categories/python/Pyqt5/" />
            <category term="Python" scheme="http://oreki.world/tags/Python/" />
            <pubDate>Wed, 15 Apr 2020 16:12:03 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;figure class=&#34;highlight python&#34;&gt;&lt;figcaption data-lang=&#34;python&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;MainWindow&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;QMainWindow&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; Ui_MainWindow&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;file&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; Qmodelidx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;model&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;filePath&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Qmodelidx&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;r&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; encoding&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;utf-8&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; errors&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;ignore&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;as&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;# 打开 utf-8 格式的文件，遇到出错进行忽略&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;# filename 返回值为 (&#39;C:/PyQt5/PyQt1.py&#39;, &#39;All Files (*)&#39;) 是一个元组，但 with...open... 只需要提供一个文件的地址而已，故输入参数 filename [0]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;# 读取所选择的文件名，并将文本编辑小部件的内容设置为文件读取的内容。这里提一下使用 with 语句来自动帮我们调用 close ()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;# 方法，避免由于文件读写时产生 IOError，导致 close ()&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;# 不会调用，需要 try...finally 来实现的不便。&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            data &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; f&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;read&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 将文件读取出来&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;textEdit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setPlainText&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;data&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 将读取到的内容放到 textEdit 小部件中&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        li &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;def&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;import&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;from&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;print&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;# 高亮的关键字&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; li&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            text &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; i&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; text&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                &lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            col &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QColor&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;250&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;97&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 置为橙色&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            fmt &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; QTextCharFormat&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            fmt&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;setForeground&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;col&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token comment&#34;&gt;# 先把光标移动到开头&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;textEdit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;moveCursor&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;QTextCursor&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Start&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            &lt;span class=&#34;token keyword&#34;&gt;while&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;textEdit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;find&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;text&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; QTextDocument&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;FindWholeWords&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;  &lt;span class=&#34;token comment&#34;&gt;# 查找所有文字&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mergeFormatOnWordOrSelection&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fmt&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;mergeFormatOnWordOrSelection&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        cursor &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;textEdit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;textCursor&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;not&lt;/span&gt; cursor&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;hasSelection&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            cursor&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;select&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;QTextCursor&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;WordUnderCursor&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        cursor&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mergeCharFormat&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;        self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;textEdit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;mergeCurrentCharFormat&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token builtin&#34;&gt;format&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://oreki.world/interview/Redis%E7%9F%A5%E8%AF%86%E7%82%B9/</guid>
            <title>Redis知识点</title>
            <link>http://oreki.world/interview/Redis%E7%9F%A5%E8%AF%86%E7%82%B9/</link>
            <category term="面试" scheme="http://oreki.world/categories/interview/" />
            <category term="Redis" scheme="http://oreki.world/tags/Redis/" />
            <pubDate>Sat, 21 Mar 2020 19:02:08 +0800</pubDate>
            <description><![CDATA[ &lt;link rel=&#34;stylesheet&#34; class=&#34;aplayer-secondary-style-marker&#34; href=&#34;\assets\css\APlayer.min.css&#34;&gt;&lt;script src=&#34;\assets\js\APlayer.min.js&#34; class=&#34;aplayer-secondary-script-marker&#34;&gt;&lt;/script&gt;&lt;h3 id=&#34;redis&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis&#34;&gt;#&lt;/a&gt; Redis&lt;/h3&gt;&lt;p&gt;Redis 本质上是一个 Key-Value 类型的内存数据库，很像 memcached，整个数据库统统加载在内存当中进行操作。&lt;/p&gt;&lt;p&gt;因为是纯内存操作，Redis 的性能非常出色，每秒可以处理超过 10 万次读写操作，是已知性能最快的 Key-Value DB。&lt;/p&gt;&lt;p&gt;Redis 可以用来实现很多有用的功能&lt;/p&gt;&lt;ol&gt;&lt;li&gt;用他的 List 来做 FIFO 双向链表，实现一个轻量级的高性 能消息队列服务&lt;/li&gt;&lt;li&gt;用他的 Set 可以做高性能的 tag 系统&lt;/li&gt;&lt;li&gt;Redis 也可以对存入的 Key-Value 设置 expire 时间，因此也可以被当作一 个功能加强版的 memcached 来用&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;使用redis有哪些好处&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用redis有哪些好处&#34;&gt;#&lt;/a&gt; 使用 redis 有哪些好处？&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;速度快，因为数据存在内存中，类似于 HashMap，HashMap 的优势就是查找和操作的时间复杂度都是 O (1)&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;支持丰富数据类型，支持 string，list，set，zset, set，hash&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;支持事务，操作都是原子性，所谓的原子性就是对数据的更改要么全部执行，要么全部不执行&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;丰富的特性：可用于缓存，消息，按 key 设置过期时间，过期后将会自动删除&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;memcache与redis的区别都有哪些&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#memcache与redis的区别都有哪些&#34;&gt;#&lt;/a&gt; Memcache 与 Redis 的区别都有哪些？&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;存储方式 Memecache 把数据全部存在内存之中，断电后会挂掉，数据不能超过内存大小。 Redis 有部份存在硬盘上，这样能保证数据的持久性。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;数据支持类型 Memcache 对数据类型支持相对简单。 Redis 有复杂的数据类型。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;redis相比memcached有哪些优势&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis相比memcached有哪些优势&#34;&gt;#&lt;/a&gt; redis 相比 memcached 有哪些优势？&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;memcached 所有的值均是简单的字符串，redis 作为其替代者，支持更为丰富的数据类型&lt;/li&gt;&lt;li&gt;redis 的速度比 memcached 快很多&lt;/li&gt;&lt;li&gt;redis 可以持久化其数据&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;为什么用redis&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#为什么用redis&#34;&gt;#&lt;/a&gt; 为什么用 redis&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;假如用户第一次访问数据库中的某些数据。这个过程会比较慢，因为是从硬盘上读取的。将该用户访问的数据存在数缓存中，这样下一次再访问这些数据的时候就可以直接从缓存中获取了。操作缓存就是直接操作内存，所以速度相当快。如果数据库中的对应数据改变的之后，同步改变缓存中相应的数据即可！&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;直接操作缓存能够承受的请求是远远大于直接访问数据库的，所以我们可以考虑把数据库中的部分数据转移到缓存中去，这样用户的一部分请求会直接到缓存这里而不用经过数据库。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;redis-的持久化机制是什么各自的优缺点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis-的持久化机制是什么各自的优缺点&#34;&gt;#&lt;/a&gt; Redis 的持久化机制是什么？各自的优缺点？&lt;/h4&gt;&lt;h5 id=&#34;rdb是redis-database缩写快照&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#rdb是redis-database缩写快照&#34;&gt;#&lt;/a&gt; RDB：是 Redis DataBase 缩写快照&lt;/h5&gt;&lt;p&gt;RDB 是 Redis 默认的持久化方式。按照一定的时间将内存的数据以快照的形式保存到硬盘中，对应产生的数据文件为 dump.rdb。通过配置文件中的 save 参数来定义快照的周期。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;只有一个文件 dump.rdb，方便持久化。&lt;/li&gt;&lt;li&gt;容灾性好，一个文件可以保存到安全的磁盘&lt;/li&gt;&lt;/ol&gt;&lt;h5 id=&#34;aof持久化&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#aof持久化&#34;&gt;#&lt;/a&gt; AOF：持久化：&lt;/h5&gt;&lt;p&gt;AOF 持久化 (即 Append Only File 持久化)，则是将 Redis 执行的每次写命令记录到单独的日志文件中，当重启 Redis 会重新将持久化的日志中文件恢复数据。&lt;/p&gt;&lt;h4 id=&#34;redis的过期策略和内存淘汰机制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis的过期策略和内存淘汰机制&#34;&gt;#&lt;/a&gt; Redis 的过期策略和内存淘汰机制&lt;/h4&gt;&lt;h5 id=&#34;过期策略&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#过期策略&#34;&gt;#&lt;/a&gt; 过期策略&lt;/h5&gt;&lt;p&gt;redis 采用的是定期删除 + 惰性删除策略&lt;/p&gt;&lt;p&gt;定期删除，redis 默认每个 100ms 检查，是否有过期的 key, 有过期 key 则删除。需要说明的是，redis 不是每个 100ms 将所有的 key 检查一次，而是随机抽取进行检查 (如果每隔 100ms, 全部 key 进行检查，redis 岂不是卡死)。因此，如果只采用定期删除策略，会导致很多 key 到时间没有删除。&lt;/p&gt;&lt;p&gt;于是，惰性删除派上用场。也就是说在你获取某个 key 的时候，redis 会检查一下，这个 key 如果设置了过期时间那么是否过期了？如果过期了此时就会删除。&lt;/p&gt;&lt;h5 id=&#34;内存淘汰机制&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内存淘汰机制&#34;&gt;#&lt;/a&gt; 内存淘汰机制&lt;/h5&gt;&lt;p&gt;如果定期删除没删除 key。然后你也没即时去请求 key，也就是说惰性删除也没生效。这样，redis 的内存会越来越高。那么就应该采用内存淘汰机制。&lt;br&gt;在 redis.conf 中有一行配置&lt;/p&gt;&lt;pre&gt;&lt;code&gt;# maxmemory-policy volatile-lru
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;该配置就是配内存淘汰策略的&lt;/p&gt;&lt;ol&gt;&lt;li&gt;noeviction：当内存不足以容纳新写入数据时，新写入操作会报错。应该没人用吧。&lt;/li&gt;&lt;li&gt;allkeys-lru：当内存不足以容纳新写入数据时，在键空间中，移除最近最少使用的 key。推荐使用，目前项目在用这种。&lt;/li&gt;&lt;li&gt;allkeys-random：当内存不足以容纳新写入数据时，在键空间中，随机移除某个 key。应该也没人用吧，你不删最少使用 Key, 去随机删。&lt;/li&gt;&lt;li&gt;volatile-lru：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，移除最近最少使用的 key。这种情况一般是把 redis 既当缓存，又做持久化存储的时候才用。不推荐&lt;/li&gt;&lt;li&gt;volatile-random：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，随机移除某个 key。依然不推荐&lt;/li&gt;&lt;li&gt;volatile-ttl：当内存不足以容纳新写入数据时，在设置了过期时间的键空间中，有更早过期时间的 key 优先移除。不推荐&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;redis主要消耗什么物理资源&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis主要消耗什么物理资源&#34;&gt;#&lt;/a&gt; Redis 主要消耗什么物理资源？&lt;/h4&gt;&lt;p&gt;内存&lt;/p&gt;&lt;h4 id=&#34;redis的内存用完了会发生什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#redis的内存用完了会发生什么&#34;&gt;#&lt;/a&gt; Redis 的内存用完了会发生什么？&lt;/h4&gt;&lt;p&gt;如果达到设置的上限，Redis 的写命令会返回错误信息（但是读命令还可以正常返回。）或者你可以配置内存淘汰机制，当 Redis 达到内存上限时会冲刷掉旧的内容。&lt;/p&gt;&lt;h4 id=&#34;缓存穿透和缓存雪崩&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#缓存穿透和缓存雪崩&#34;&gt;#&lt;/a&gt; 缓存穿透和缓存雪崩&lt;/h4&gt;&lt;h5 id=&#34;缓存穿透&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#缓存穿透&#34;&gt;#&lt;/a&gt; 缓存穿透&lt;/h5&gt;&lt;p&gt;缓存穿透，即黑客故意去请求缓存中不存在的数据，导致所有的请求都怼到数据库上，从而数据库连接异常。&lt;/p&gt;&lt;h5 id=&#34;缓存雪崩&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#缓存雪崩&#34;&gt;#&lt;/a&gt; 缓存雪崩&lt;/h5&gt;&lt;p&gt;即缓存同一时间大面积的失效，这个时候又来了一波请求，结果请求都怼到数据库上，从而导致数据库连接异常。&lt;/p&gt;&lt;p&gt;解决方法：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;给缓存的失效时间，加上一个随机值，避免集体失效。&lt;/li&gt;&lt;/ol&gt;&lt;h4 id=&#34;mysql里有2000w数据redis中只存20w的数据如何保证redis中的数据都是热点数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mysql里有2000w数据redis中只存20w的数据如何保证redis中的数据都是热点数据&#34;&gt;#&lt;/a&gt; mySQL 里有 2000w 数据，redis 中只存 20w 的数据，如何保证 redis 中的数据都是热点数据&lt;/h4&gt;&lt;p&gt;redis 内存数据集大小上升到一定大小的时候，就会施行数据淘汰策略（回收策略）。&lt;br&gt;可以设置成最近最少使用的数据淘汰。&lt;/p&gt; ]]></description>
        </item>
    </channel>
</rss>
